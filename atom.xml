<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chacha_Z</title>
  
  <subtitle>may you forever young.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Chacha-Z.github.io/"/>
  <updated>2019-03-23T13:30:38.000Z</updated>
  <id>http://Chacha-Z.github.io/</id>
  
  <author>
    <name>叉叉儿</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蓝桥杯备考-算法训练总结</title>
    <link href="http://Chacha-Z.github.io/2019/03/23/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E6%80%BB%E7%BB%93/"/>
    <id>http://Chacha-Z.github.io/2019/03/23/蓝桥杯备考-算法训练总结/</id>
    <published>2019-03-23T12:27:10.000Z</published>
    <updated>2019-03-23T13:30:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="区间K大数"><a href="#区间K大数" class="headerlink" title="区间K大数"></a>区间K大数</h2><p><strong>思路</strong>：使用Arrays.copyOfRange(a, l, r)函数提取待算计算区间子序列，对返回的子序列进行排序，返回排序后第K个位置的数（从大往小的话只需用len-k）<br>是否需要考虑重复数据？此题没有考虑（为什么）</p><h2 id="最大最小公倍数"><a href="#最大最小公倍数" class="headerlink" title="最大最小公倍数"></a>最大最小公倍数</h2><p><strong>思路</strong>：<br>扩展：辗转相除法（欧几里得算法）和更相减损术 -&gt; 求最大公约数<br>最大公约数*最小公倍数 = 两个数的乘积 -&gt; 求最小公倍数 = 乘积/最大公约数<br>该题： 贪心思想；考虑最大的三个数，分情况考虑<br>最大数为奇数：<br>最大数为偶数：</p><h2 id="K好数"><a href="#K好数" class="headerlink" title="K好数"></a>K好数</h2><p><strong>思路</strong>：动态规划</p><h2 id="N以内质数的乘积"><a href="#N以内质数的乘积" class="headerlink" title="N以内质数的乘积"></a>N以内质数的乘积</h2><p><strong>思路</strong>：判断是否是质数：1不是质数，0既不是质数也不是合数</p><h2 id="两数组对应相乘再相加的最小值"><a href="#两数组对应相乘再相加的最小值" class="headerlink" title="两数组对应相乘再相加的最小值"></a>两数组对应相乘再相加的最小值</h2><p><strong>思路</strong>：排序，最小的负数乘上响应最大的正数，对每个数组分别设置一个首尾指针<br>记住这个while循环的模型</p><h2 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h2><p><strong>思路</strong>： str.toCharArray();sb.toString()</p><h2 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h2><h2 id="字串统计"><a href="#字串统计" class="headerlink" title="字串统计"></a>字串统计</h2>]]></content>
    
    <summary type="html">
    
      算法训练总结，未完
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-第六届JavaB组省赛题解</title>
    <link href="http://Chacha-Z.github.io/2019/03/21/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-%E7%AC%AC%E5%85%AD%E5%B1%8AJavaB%E7%BB%84%E7%9C%81%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://Chacha-Z.github.io/2019/03/21/蓝桥杯备考-第六届JavaB组省赛题解/</id>
    <published>2019-03-21T13:33:37.000Z</published>
    <updated>2019-03-23T10:55:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="三角形面积"><a href="#三角形面积" class="headerlink" title="三角形面积"></a>三角形面积</h2><blockquote><p>三角形面积<br>如【图1】所示。图中的所有小方格面积都是1。<br>那么，图中的三角形面积应该是多少呢？<br>请填写三角形的面积。不要填写任何多余内容或说明性文字。  </p></blockquote><p><strong>思路</strong>： 简单到怀疑自己；28</p><h2 id="立方变自身"><a href="#立方变自身" class="headerlink" title="立方变自身"></a>立方变自身</h2><blockquote><p>立方变自身<br>观察下面的现象,某个数字的立方，按位累加仍然等于自身。<br>1^3 = 1<br>8^3  = 512    5+1+2=8<br>17^3 = 4913   4+9+1+3=17<br>…<br>请你计算包括1,8,17在内，符合这个性质的正整数一共有多少个？<br>请填写该数字，不要填写任何多余的内容或说明性的文字。</p></blockquote><p><strong>思路</strong>：循环；<br>问题：怎样判断结束条件，我现在的思路就是把它全部输出来，直到不变</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> season6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tow_TripleSelf</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; ; ++i)&#123;<span class="comment">//怎样判断结束条件，我现在的思路就是把它全部输出来，直到不变</span></span><br><span class="line"><span class="keyword">if</span>(i == selfAdd(Math.pow(i, <span class="number">3</span>)))&#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(i + <span class="string">" "</span>);</span><br><span class="line">System.out.println(count);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1、8、17、18、26、27</span></span><br><span class="line"><span class="comment">//6</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">selfAdd</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(x != <span class="number">0</span>)&#123;</span><br><span class="line">sum += x%<span class="number">10</span>;</span><br><span class="line">x /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三羊献瑞"><a href="#三羊献瑞" class="headerlink" title="三羊献瑞"></a>三羊献瑞</h2><blockquote><p>三羊献瑞<br>观察下面的加法算式：  </p></blockquote><pre>      祥 瑞 生 辉  +   三 羊 献 瑞-------------------   三 羊 生 瑞 气</pre><blockquote><p>其中，相同的汉字代表相同的数字，不同的汉字代表不同的数字。<br>请你填写“三羊献瑞”所代表的4位数字（答案唯一），不要填写任何多余内容。</p></blockquote><p><strong>思路</strong>： 挺简单的一道题，因为条件写错了o写成0调了一会儿，注意判断个位数和其他数字都不同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> season6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Three_ChineseExpression</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">1</span>; l &lt;= <span class="number">9</span>; ++l)&#123; <span class="comment">//祥</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>; m &lt;= <span class="number">9</span>; ++m)&#123; <span class="comment">//瑞</span></span><br><span class="line"><span class="keyword">if</span>(m == l) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt;= <span class="number">9</span>; ++n)&#123; <span class="comment">//生</span></span><br><span class="line"><span class="keyword">if</span>(n == m || n == l) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> o = <span class="number">0</span>; o &lt;= <span class="number">9</span>; ++o)&#123; <span class="comment">//辉</span></span><br><span class="line"><span class="keyword">if</span>(o == l || o == m || o == n) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p = <span class="number">1</span>; p &lt;= <span class="number">9</span>; ++p)&#123;<span class="comment">//三</span></span><br><span class="line"><span class="keyword">if</span>(p == l || p == m || p == n || p== o) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> q = <span class="number">0</span>; q &lt;= <span class="number">9</span>; ++q)&#123;<span class="comment">//羊</span></span><br><span class="line"><span class="keyword">if</span>(q == l || q == m || q == n || q== o || q == p) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> r = <span class="number">0</span>; r &lt;= <span class="number">9</span>; ++r)&#123;<span class="comment">//献</span></span><br><span class="line"><span class="keyword">if</span>(r == l || r == m || r == n || r== o || r == p || r == q) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = l*<span class="number">1000</span>+m*<span class="number">100</span>+n*<span class="number">10</span>+o;</span><br><span class="line"><span class="keyword">int</span> b = p*<span class="number">1000</span>+q*<span class="number">100</span>+r*<span class="number">10</span>+m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c = a+b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">10000</span> == p &amp;&amp; (c/<span class="number">1000</span>)%<span class="number">10</span> == q &amp;&amp;</span><br><span class="line">(c/<span class="number">100</span>)%<span class="number">10</span> == n &amp;&amp; (c/<span class="number">10</span>)%<span class="number">10</span> == m &amp;&amp;</span><br><span class="line">c%<span class="number">10</span> != l &amp;&amp; c%<span class="number">10</span> != m &amp;&amp; c%<span class="number">10</span> != n &amp;&amp; c%<span class="number">10</span> != o &amp;&amp; c%<span class="number">10</span> != p &amp;&amp; </span><br><span class="line">c%<span class="number">10</span> != q &amp;&amp; c%<span class="number">10</span> != r )&#123;</span><br><span class="line">System.out.println(p + <span class="string">" "</span> + q + <span class="string">" "</span> + r + <span class="string">" "</span> + m);<span class="comment">//1 0 8 5</span></span><br><span class="line">System.out.println(c);<span class="comment">//10652</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DFS</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 三羊献瑞 </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">a[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">fun(a,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">8</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(check_sum(a))&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(a[<span class="number">0</span>]+<span class="string">""</span>+a[<span class="number">1</span>]+<span class="string">""</span>+a[<span class="number">2</span>]+<span class="string">""</span>+a[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">a[n]=i;<span class="comment">//设置当前位为i</span></span><br><span class="line"><span class="keyword">if</span>(check(a,n)) fun(a,n+<span class="number">1</span>);<span class="comment">//不是全排列不用回溯（什么时候需要回溯？）</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> flag=<span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[n]==<span class="number">0</span>) flag=<span class="keyword">false</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==a[n])&#123;</span><br><span class="line">flag=<span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">4</span> &amp;&amp; a[n]==<span class="number">0</span>) flag=<span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check_sum</span><span class="params">(<span class="keyword">int</span> a[])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">1000</span>*a[<span class="number">4</span>]+<span class="number">100</span>*a[<span class="number">3</span>]+<span class="number">10</span>*a[<span class="number">5</span>]+a[<span class="number">6</span>];</span><br><span class="line"><span class="keyword">int</span> y=<span class="number">1000</span>*a[<span class="number">0</span>]+<span class="number">100</span>*a[<span class="number">1</span>]+<span class="number">10</span>*a[<span class="number">2</span>]+a[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> z=<span class="number">10000</span>*a[<span class="number">0</span>]+<span class="number">1000</span>*a[<span class="number">1</span>]+<span class="number">100</span>*a[<span class="number">5</span>]+<span class="number">10</span>*a[<span class="number">3</span>]+a[<span class="number">7</span>];</span><br><span class="line"><span class="keyword">if</span>((x+y)==z)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环节长度（错误）（已解决）"><a href="#循环节长度（错误）（已解决）" class="headerlink" title="循环节长度（错误）（已解决）"></a>循环节长度（错误）（已解决）</h2><blockquote><p>循环节长度<br>两个整数做除法，有时会产生循环小数，其循环部分称为：循环节。<br>比如，11/13=6=&gt;0.846153846153…..  其循环节为[846153] 共有6位。<br>下面的方法，可以求出循环节的长度。<br>请仔细阅读代码，并填写划线部分缺少的代码。  </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n = n % m;</span><br><span class="line">Vector v = <span class="keyword">new</span> Vector();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(;;)</span><br><span class="line">&#123;</span><br><span class="line">v.add(n);</span><br><span class="line">n *= <span class="number">10</span>;</span><br><span class="line">n = n % m;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(v.indexOf(n)&gt;=<span class="number">0</span>)  _________________________________ ;  <span class="comment">//填空</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意，只能填写缺少的部分，不要重复抄写已有代码。不要填写任何多余的文字。</p></blockquote><p><strong>思路</strong>：凑出来的，不是很懂这个怎么求的，看代码觉得应该返回一个值这个值就应该是所求的长度<br>能返回些什么值呢，就凑出来了，v.size()，结果当然是错的<br>这串代码的思路是，首先要知道怎么求小数部分，余数乘以10除以除数的商是小数部分，因为每次对应取余数的m都相同，只要当余数重复出现时，商就会重复，即为循环小数部分。<br>v.indexof(n)即为判断余数是否重复，因为重复位置不一定是在第一个，所以当前长度还要减去第一次出现重复的位置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(v.indexOf(n)&gt;=<span class="number">0</span>)  <span class="keyword">return</span> v.size();  <span class="comment">//填空</span></span><br></pre></td></tr></table></figure><h2 id="九数组分数（错误）（已解决）"><a href="#九数组分数（错误）（已解决）" class="headerlink" title="九数组分数（错误）（已解决）"></a>九数组分数（错误）（已解决）</h2><blockquote><p>九数组分数<br>1,2,3…9 这九个数字组成一个分数，其值恰好为1/3，如何组法？<br>下面的程序实现了该功能，请填写划线部分缺失的代码。  </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span>[] x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = x[<span class="number">0</span>]*<span class="number">1000</span> + x[<span class="number">1</span>]*<span class="number">100</span> + x[<span class="number">2</span>]*<span class="number">10</span> + x[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> b = x[<span class="number">4</span>]*<span class="number">10000</span> + x[<span class="number">5</span>]*<span class="number">1000</span> + x[<span class="number">6</span>]*<span class="number">100</span> + x[<span class="number">7</span>]*<span class="number">10</span> + x[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">if</span>(a*<span class="number">3</span>==b) System.out.println(a + <span class="string">" "</span> + b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>[] x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k&gt;=x.length)&#123;</span><br><span class="line">test(x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=k; i&lt;x.length; i++)&#123;</span><br><span class="line">&#123;<span class="keyword">int</span> t=x[k]; x[k]=x[i]; x[i]=t;&#125;</span><br><span class="line">f(x,k+<span class="number">1</span>);</span><br><span class="line">_______________________________________       <span class="comment">// 填空</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] x = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">f(x,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意，只能填写缺少的部分，不要重复抄写已有代码。不要填写任何多余的文字。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="keyword">int</span> t=x[k]; x[k]=x[i]; x[i]=t;&#125;  <span class="comment">// 填空</span></span><br></pre></td></tr></table></figure><p><strong>思路</strong>：没有思路；能够想到这道题肯定是个递归，也有循环条件。能够想到是全排列，然后在test(x)判断输出；<br>所以我尝试在划线处填入test(x)，但是错了，啥也输不出来；又将划线处x数组打印出来，发现到这一步并不是全排列，有漏掉的情况；<br>然后，就没有然后了；<br>这是一个递归全排列，占个坑  </p><h3 id="递归全排列"><a href="#递归全排列" class="headerlink" title="递归全排列"></a>递归全排列</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> season6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecursionPerm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span>[] x = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">perm(x, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">perm</span><span class="params">(<span class="keyword">int</span>[] x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(k &gt;= x.length)&#123;</span><br><span class="line">System.out.println(Arrays.toString(x));</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = k; i &lt; x.length; ++i)&#123;</span><br><span class="line">swap(x, k, i);</span><br><span class="line">perm(x, k+<span class="number">1</span>);</span><br><span class="line">swap(x, k, i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] x, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp = x[i];</span><br><span class="line">x[i] = x[j];</span><br><span class="line">x[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加法变乘法"><a href="#加法变乘法" class="headerlink" title="加法变乘法"></a>加法变乘法</h2><blockquote><p>加法变乘法<br>我们都知道：1+2+3+ … + 49 = 1225<br>现在要求你把其中两个不相邻的加号变成乘号，使得结果为2015<br>比如：<br>1+2+3+…+10<em>11+12+…+27</em>28+29+…+49 = 2015<br>就是符合要求的答案。<br>请你寻找另外一个可能的答案，并把位置靠前的那个乘号左边的数字提交（对于示例，就是提交10）。<br>注意：需要你提交的是一个整数，不要填写任何多余的内容。  </p></blockquote><p><strong>思路</strong>：先用数学转换，49个数之和可以求得为1225，拿两对数来相乘（m/m+1、n/n+1）剩下的和为1225-m-m-1-n-n-1<br>剩下的和加上两对数的乘积等于2015， 化简可以得到算式，在遍历对m、n取值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">47</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">2</span>; j &lt;= <span class="number">48</span>; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(i*i-i + j*j-j == <span class="number">792</span>)&#123;</span><br><span class="line">System.out.println(i + <span class="string">" "</span> + j);</span><br><span class="line"><span class="comment">//10 27</span></span><br><span class="line"><span class="comment">//16 24</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="牌型种数"><a href="#牌型种数" class="headerlink" title="牌型种数"></a>牌型种数</h2><blockquote><p>牌型种数<br>小明被劫持到X赌城，被迫与其他3人玩牌。<br>一副扑克牌（去掉大小王牌，共52张），均匀发给4个人，每个人13张。<br>这时，小明脑子里突然冒出一个问题：<br>如果不考虑花色，只考虑点数，也不考虑自己得到的牌的先后顺序，<br>自己手里能拿到的初始牌型组合一共有多少种呢？  </p></blockquote><p>请填写该整数，不要填写任何多余的内容或说明文字。  </p><p><strong>思路</strong>：数学太差，甚至想重学高中数学，只能考虑暴力解法<br>1-13点数，每个点数4张牌，考虑暴力循环，对每张牌出现的次数进行循环，之和等于13</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int countAll = 0;</span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">4</span>; ++a)&#123;<span class="comment">//1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">4</span>; ++b)&#123;<span class="comment">//2</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">0</span>; c &lt;= <span class="number">4</span>; ++c)&#123;<span class="comment">//3</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> d = <span class="number">0</span>; d &lt;= <span class="number">4</span>; ++d)&#123;<span class="comment">//4</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> e = <span class="number">0</span>; e &lt;= <span class="number">4</span>; ++e)&#123;<span class="comment">//5</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> f = <span class="number">0</span>; f &lt;= <span class="number">4</span>; ++f)&#123;<span class="comment">//6</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> g = <span class="number">0</span>; g &lt;= <span class="number">4</span>; ++g)&#123;<span class="comment">//7</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> h = <span class="number">0</span>; h &lt;= <span class="number">4</span>; ++h)&#123;<span class="comment">//8</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; ++i)&#123;<span class="comment">//9</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">4</span>; ++j)&#123;<span class="comment">//10</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= <span class="number">4</span>; ++k)&#123;<span class="comment">//11</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span>; l &lt;= <span class="number">4</span>; ++l)&#123;<span class="comment">//12</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>; m &lt;= <span class="number">4</span>; ++m)&#123;<span class="comment">//13</span></span><br><span class="line">countAll++;</span><br><span class="line"><span class="keyword">if</span>(a+b+c+d+e+f+g+h+i+j+k+l+m == <span class="number">13</span>)&#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//System.out.println(countAll);//1220703125</span></span><br><span class="line">System.out.println(count);<span class="comment">//3598180</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DFS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Seven_dfsOrder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">dfs(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">System.out.println(ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> step, <span class="keyword">int</span> count)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(count &gt; <span class="number">13</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(step == <span class="number">13</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(count == <span class="number">13</span>)&#123;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>; n &lt;= <span class="number">4</span>; ++n)&#123;</span><br><span class="line">count += n;</span><br><span class="line">dfs(step+<span class="number">1</span>, count);</span><br><span class="line">count -= n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="饮料换购"><a href="#饮料换购" class="headerlink" title="饮料换购"></a>饮料换购</h2><blockquote><p>饮料换购<br>乐羊羊饮料厂正在举办一次促销优惠活动。乐羊羊C型饮料，<br>凭3个瓶盖可以再换一瓶C型饮料，并且可以一直循环下去，但不允许赊账。<br>请你计算一下，如果小明不浪费瓶盖，尽量地参加活动，<br>那么，对于他初始买入的n瓶饮料，最后他一共能得到多少瓶饮料。<br>输入：一个整数n，表示开始购买的饮料数量（0&lt;n&lt;10000）<br>输出：一个整数，表示实际得到的饮料数  </p></blockquote><blockquote><p>例如：<br>用户输入：<br>100<br>程序应该输出：<br>149<br>用户输入：<br>101<br>程序应该输出：<br>151  </p></blockquote><p><strong>思路</strong>：使用模拟这个过程就好了，三瓶三瓶计算，然后再加一瓶</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N = scanner.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nowHave = N;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> countBottle = N;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(nowHave != <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//System.out.println(nowHave);</span></span><br><span class="line">count++;</span><br><span class="line">nowHave--;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(count == <span class="number">3</span>)&#123;</span><br><span class="line">nowHave++;</span><br><span class="line"><span class="comment">//System.out.println(nowHave);</span></span><br><span class="line">countBottle++;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(countBottle);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      第九届JavaB组省赛题解
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-第九届JavaB组省赛题解</title>
    <link href="http://Chacha-Z.github.io/2019/03/21/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-%E7%AC%AC%E4%B9%9D%E5%B1%8AJavaB%E7%BB%84%E7%9C%81%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://Chacha-Z.github.io/2019/03/21/蓝桥杯备考-第九届JavaB组省赛题解/</id>
    <published>2019-03-21T12:03:31.000Z</published>
    <updated>2019-03-23T12:20:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第几天"><a href="#第几天" class="headerlink" title="第几天"></a>第几天</h2><pre>标题：第几天2000年的1月1日，是那一年的第1天。那么，2000年的5月4日，是那一年的第几天？注意：需要提交的是一个整数，不要填写任何多余内容。</pre><pre><code>思路：很简单，电脑有自带日期计算器注意：1月1日算作第一天，所以最后结果要加1（计算器算出的结果）    口算：2000年是闰年，31+29+31+20+4 = 125</code></pre><h2 id="方格计数"><a href="#方格计数" class="headerlink" title="方格计数"></a>方格计数</h2><pre>标题：方格计数如图p1.png所示，在二维平面上有无数个1x1的小方格。我们以某个小方格的一个顶点为圆心画一个半径为1000的圆。你能计算出这个圆里有多少个完整的小方格吗？ 注意：需要提交的是一个整数，不要填写任何多余内容。</pre><p><a href="/p1.png">!方格</a></p><pre><code>思路：我的妈我在想什么，一开始想半径1000能容纳多少个根号2就有对应多少个方格能够被包括在里面  不是的啊！还有在这个n*根号2正方形之外还有可能被包括的   [!方格2](/p2.png)所以正确的想法应该是，代码实现，遍历一个象限（第一象限），1000边长内，有多少小方格的右上顶点在1000半径内</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">1000</span>; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(i*i + j*j &lt;= <span class="number">1000000</span>)&#123;</span><br><span class="line">count ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(count*<span class="number">4</span>); <span class="comment">//3137548</span></span><br></pre></td></tr></table></figure><h2 id="复数幂（未实现快速幂）"><a href="#复数幂（未实现快速幂）" class="headerlink" title="复数幂（未实现快速幂）"></a>复数幂（未实现快速幂）</h2><pre>标题：复数幂设i为虚数单位。对于任意正整数n，(2+3i)^n 的实部和虚部都是整数。求 (2+3i)^123456 等于多少？ 即(2+3i)的123456次幂，这个数字很大，要求精确表示。答案写成 "实部±虚部i" 的形式，实部和虚部都是整数（不能用科学计数法表示），中间任何地方都不加空格，实部为正时前面不加正号。(2+3i)^2 写成: -5+12i，(2+3i)^5 的写成: 122-597i注意：需要提交的是一个很庞大的复数，不要填写任何多余内容。</pre><pre><code>思路：计算很简单，就算暴力循环123456次好像也可以接受  只是，这个数，真的真的真的很庞大，庞大到！我的eclipse显示不出来，显示了两行-，就没啦   </code></pre><p><a href="/plurResult.png">!复数结果</a><br>    原来，只是因为数太大了，赋值控制台这些空白，粘贴到记事本中就可以看到了<br><a href="/plurResult2.png">!复数结果</a><br>    重点：大数计算 BigInteger类</p><pre><code>1. BigInteger.valueOf()2. 自带加减乘除方法</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BigInteger a = BigInteger.valueOf(<span class="number">2</span>); </span><br><span class="line">BigInteger b = BigInteger.valueOf(<span class="number">3</span>); </span><br><span class="line"></span><br><span class="line">BigInteger A = a;</span><br><span class="line">BigInteger B = b;</span><br><span class="line"></span><br><span class="line">BigInteger tempA = A;</span><br><span class="line">BigInteger tempB = B;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">123456</span>; ++i)&#123;</span><br><span class="line">    tempA = A;</span><br><span class="line">    tempB = B;</span><br><span class="line">    </span><br><span class="line">    A = tempA.multiply(a).subtract(tempB.multiply(b));</span><br><span class="line">    B = b.multiply(tempA).add(a.multiply(tempB));</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(A);</span><br><span class="line">System.out.println(B);</span><br></pre></td></tr></table></figure><pre><code>这还是太暴力了，已经要运行一小会儿了，尝试使用java快速幂优化，占个坑</code></pre><h3 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h3><p><a href="https://blog.csdn.net/Du_Mingm/article/details/79201564" target="_blank" rel="noopener">!</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><span class="comment">//a^b</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">if</span>(b&amp;<span class="number">1</span>)<span class="comment">//等价与b%2</span></span><br><span class="line">        <span class="keyword">return</span> a*pow(a*a,b/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> pow(a*a,b/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//非递归</span></span><br><span class="line"><span class="comment">//秦九韶算法按自底向上理解</span></span><br><span class="line"><span class="comment">//或按二进制指数理解</span></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1</span>,base=a;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            ans*=base;</span><br><span class="line">        base*=base;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;<span class="comment">//等价b/=2</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="测试次数（错误）（已解决）"><a href="#测试次数（错误）（已解决）" class="headerlink" title="测试次数（错误）（已解决）"></a>测试次数（错误）（已解决）</h2><pre>标题：测试次数x星球的居民脾气不太好，但好在他们生气的时候唯一的异常举动是：摔手机。各大厂商也就纷纷推出各种耐摔型手机。x星球的质监局规定了手机必须经过耐摔测试，并且评定出一个耐摔指数来，之后才允许上市流通。x星球有很多高耸入云的高塔，刚好可以用来做耐摔测试。塔的每一层高度都是一样的，与地球上稍有不同的是，他们的第一层不是地面，而是相当于我们的2楼。如果手机从第7层扔下去没摔坏，但第8层摔坏了，则手机耐摔指数=7。特别地，如果手机从第1层扔下去就坏了，则耐摔指数=0。如果到了塔的最高层第n层扔没摔坏，则耐摔指数=n为了减少测试次数，从每个厂家抽样3部手机参加测试。某次测试的塔高为1000层，如果我们总是采用最佳策略，在最坏的运气下最多需要测试多少次才能确定手机的耐摔指数呢？请填写这个最多测试次数。注意：需要填写的是一个整数，不要填写任何多余内容。</pre><pre><code>思路：没有思路，一开始想二分法，肯定是错的啊，手机只有三台能够测试  注意读题啊！只有三台手机可以用来摔，是测这种手机的，不是测每台手机的  在理解这道题之前我们先了解“摔鸡蛋问题”</code></pre><h3 id="摔鸡蛋问题"><a href="#摔鸡蛋问题" class="headerlink" title="摔鸡蛋问题"></a>摔鸡蛋问题</h3><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><pre>标题：快速排序  以下代码可以从数组a[]中找出第k小的元素。   它使用了类似快速排序中的分治算法，期望时间复杂度是O(N)的。请仔细阅读分析源码，填写划线部分缺失的内容。</pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">quickSelect</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">Random rand = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">int</span> p = rand.nextInt(r - l + <span class="number">1</span>) + l;</span><br><span class="line"><span class="keyword">int</span> x = a[p];</span><br><span class="line"><span class="keyword">int</span> tmp = a[p]; a[p] = a[r]; a[r] = tmp;</span><br><span class="line"><span class="keyword">int</span> i = l, j = r;</span><br><span class="line"><span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line">                <span class="keyword">while</span>(i &lt; j &amp;&amp; a[i] &lt; x) i++;</span><br><span class="line">                <span class="keyword">if</span>(i &lt; j) &#123;</span><br><span class="line">                        a[j] = a[i];</span><br><span class="line">                        j--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span>(i &lt; j &amp;&amp; a[j] &gt; x) j--;</span><br><span class="line">                <span class="keyword">if</span>(i &lt; j) &#123;</span><br><span class="line">                        a[i] = a[j];</span><br><span class="line">                        i++;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i] = x;</span><br><span class="line">        p = i;</span><br><span class="line">        <span class="keyword">if</span>(i - l + <span class="number">1</span> == k) <span class="keyword">return</span> a[i];</span><br><span class="line">        <span class="keyword">if</span>(i - l + <span class="number">1</span> &lt; k) <span class="keyword">return</span> quickSelect( _________________________________ ); <span class="comment">//填空</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> quickSelect(a, l, i - <span class="number">1</span>, k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> [] a = &#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">7</span>&#125;;</span><br><span class="line">System.out.println(quickSelect(a, <span class="number">0</span>, <span class="number">5</span>, <span class="number">4</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>思路：    复习一下快速排序的思路：分而治之，选择一个“标兵”，把比他大的全部移到他右边，把比他小的全部移到他左边      该代码思路：随机选择一个数，把比他大的全部移到他右边，把比他小的全部移到他左边，最后返回该数最后的位置      这个位置即为相对左边界第几大！！（关键）      然后!如果这个位置比k大，说明目标数在左边，则递归左边，否则递归右边（注意右边时，k应该是相对左边界的，所以要减该位置表示大小</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(i - l + <span class="number">1</span> &lt; k) <span class="keyword">return</span> quickSelect(a, i+<span class="number">1</span>, r, k-i+l-<span class="number">1</span>); <span class="comment">//填空</span></span><br></pre></td></tr></table></figure><h2 id="递增三元组"><a href="#递增三元组" class="headerlink" title="递增三元组"></a>递增三元组</h2><pre>标题：递增三元组给定三个整数数组A = [A1, A2, ... AN],   B = [B1, B2, ... BN],   C = [C1, C2, ... CN]，  请你统计有多少个三元组(i, j, k) 满足：  1. 1 <= 0 1 2 3 27 i, j, k <="N" 2. ai bj ck 【输入格式】 第一行包含一个整数n。 第二行包含n个整数a1, a2, ... an。 第三行包含n个整数b1, b2, bn。 第四行包含n个整数c1, c2, cn。 对于30%的数据，1 对于60%的数据，1 对于100%的数据，1 bi, ci 【输出格式】 一个整数表示答案 【输入样例】 【输出样例】 pre><pre><code>思路：为了不暴力循环，因为我们只需要知道比上一个循环数大的数有多少个，所以对每个三元组从小到大排序  还有一个关键问题：怎样累积，乘还是加还要注意，不同位置算不同组合</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IncreaseTriplet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span>[] test = &#123;<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>&#125;;</span><br><span class="line">System.out.println(search(test, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> N = scanner.nextInt();</span><br><span class="line">scanner.nextLine();</span><br><span class="line"><span class="keyword">int</span>[] A = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line"><span class="keyword">int</span>[] B = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line"><span class="keyword">int</span>[] C = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line"></span><br><span class="line">String[] tempA = scanner.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">String[] tempB = scanner.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">String[] tempC = scanner.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">scanner.close();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i)&#123;</span><br><span class="line">A[i] = Integer.valueOf(tempA[i]);</span><br><span class="line">B[i] = Integer.valueOf(tempB[i]);</span><br><span class="line">C[i] = Integer.valueOf(tempC[i]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(deal(A, B, C));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">deal</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span>[] B, <span class="keyword">int</span>[] C)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> N = A.length;</span><br><span class="line"></span><br><span class="line">Arrays.sort(A);</span><br><span class="line">Arrays.sort(B);</span><br><span class="line">Arrays.sort(C);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;  <span class="comment">//累积1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> a = A[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> countBC = <span class="number">0</span>;    <span class="comment">//累积2</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = search(B, a); j &lt; N; ++j)&#123;</span><br><span class="line"><span class="keyword">int</span> b = B[j];</span><br><span class="line"></span><br><span class="line">countBC += N - search(C, b);</span><br><span class="line"></span><br><span class="line">System.out.println(search(C, b));</span><br><span class="line">&#125;</span><br><span class="line">count += countBC;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回数组中第一个大于A的数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> low = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> high = a.length-<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (low + high)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(low &lt; high)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[mid] &lt; key)&#123;</span><br><span class="line">low = mid+<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">high = mid-<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">mid = (low + high)/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> low;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="螺旋折线"><a href="#螺旋折线" class="headerlink" title="螺旋折线"></a>螺旋折线</h2><pre>标题：螺旋折线如图p1.pgn所示的螺旋折线经过平面上所有整点恰好一次。  对于整点(X, Y)，我们定义它到原点的距离dis(X, Y)是从原点到(X, Y)的螺旋折线段的长度。  例如dis(0, 1)=3, dis(-2, -1)=9  给出整点坐标(X, Y)，你能计算出dis(X, Y)吗？【输入格式】X和Y 对于40%的数据，-1000 <= 0 1 3 x, y <="1000" 对于70%的数据，-100000 对于100%的数据, -1000000000 【输出格式】 输出dis(x, y) 【输入样例】 【输出样例】 pre><pre><code>思路：找规律，(-m,-m)(m&gt;0)处的点恰好等于所在正方形周长（加若干内圈正方形周长（内圈正方形周长有规律，求和））  以(-m, -m)点为参照点，可以计算出该点的长度，同一正方形上的点按规律递减  关键：因为输入数据，非常非常大，所以依旧只能使用BigInteter类,真的是看的我头大  </code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> season9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpiralBrokenLine</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="comment">//System.out.println(deal(0, 0));</span></span><br><span class="line">System.out.println(deal(-<span class="number">1000000000</span>, <span class="number">990000000</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigInteger <span class="title">deal</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">BigInteger base = BigInteger.valueOf(Math.max(Math.abs(x), Math.abs(y))); <span class="comment">//正数(-base, -base)</span></span><br><span class="line">BigInteger baseResult = base.multiply(BigInteger.valueOf(<span class="number">8</span>));<span class="comment">//x过大时注意改变存储数据类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BigInteger distance = BigInteger.valueOf(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(BigInteger.valueOf(y).equals(base.negate()))&#123;</span><br><span class="line"><span class="comment">//distance = baseResult - (x + base);</span></span><br><span class="line"></span><br><span class="line">distance = baseResult.subtract(BigInteger.valueOf(x).add(base));</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(BigInteger.valueOf(x) == base)&#123;</span><br><span class="line"><span class="comment">//distance = baseResult - base*2 - (y + base);</span></span><br><span class="line"></span><br><span class="line">distance = baseResult.subtract(BigInteger.valueOf(<span class="number">2</span>).multiply(base)).subtract(BigInteger.valueOf(y).add(base));</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(BigInteger.valueOf(y) == base)&#123;</span><br><span class="line"><span class="comment">//distance = baseResult - 4*base - (base - x);</span></span><br><span class="line"></span><br><span class="line">distance = baseResult.subtract(BigInteger.valueOf(<span class="number">4</span>).multiply(base)).subtract(base.subtract(BigInteger.valueOf(x)));</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(BigInteger.valueOf(x).equals(base.negate()))&#123;<span class="comment">//不能用==号</span></span><br><span class="line"><span class="comment">//distance = baseResult - 6*base - (base - y);</span></span><br><span class="line">distance = baseResult.subtract(BigInteger.valueOf(<span class="number">6</span>).multiply(base)).subtract(base.subtract(BigInteger.valueOf(y)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//distance + 8*(base-1) + (base-2)*(base-1)*8/2;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> distance.add(BigInteger.valueOf(<span class="number">8</span>).multiply(base.subtract(BigInteger.valueOf(<span class="number">1</span>)))).add(base.subtract(BigInteger.valueOf(<span class="number">2</span>)).multiply(base.subtract(BigInteger.valueOf(<span class="number">1</span>))).multiply(BigInteger.valueOf(<span class="number">8</span>)).divide(BigInteger.valueOf(<span class="number">2</span>))); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="日志统计（未解决）"><a href="#日志统计（未解决）" class="headerlink" title="日志统计（未解决）"></a>日志统计（未解决）</h2><blockquote><p>标题：日志统计<br>小明维护着一个程序员论坛。现在他收集了一份”点赞”日志，日志共有N行。其中每一行的格式是：<br>ts id<br>表示在ts时刻编号id的帖子收到一个”赞”。<br>现在小明想统计有哪些帖子曾经是”热帖”。<br>如果一个帖子曾在任意一个长度为D的时间段内收到不少于K个赞，小明就认为这个帖子曾是”热帖”。<br>具体来说，如果存在某个时刻T满足该帖在[T, T+D)这段时间内(注意是左闭右开区间)收到不少于K个赞，该帖就曾是”热帖”。<br>给定日志，请你帮助小明统计出所有曾是”热帖”的帖子编号。   </p></blockquote><blockquote><p>【输入格式】<br>第一行包含三个整数N、D和K。<br>以下N行每行一条日志，包含两个整数ts和id。<br>对于50%的数据，1 &lt;= K &lt;= N &lt;= 1000<br>对于100%的数据，1 &lt;= K &lt;= N &lt;= 100000 0 &lt;= ts &lt;= 100000 0 &lt;= id &lt;= 100000<br>【输出格式】<br>按从小到大的顺序输出热帖id。每个id一行。<br>【输入样例】<br>7 10 2<br>0 1<br>0 10<br>10 10<br>10 1<br>9 1<br>100 3<br>100 3<br>【输出样例】<br>1<br>3   </p></blockquote><p><strong>思路</strong>：看了人家的解答还觉得蛮好解得…最简单就是排序嘛按id处理<br>扩展：尺取法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比较好理解的方法，可是当数据很大的时候很困难（涉及排序）</span></span><br><span class="line"><span class="keyword">package</span> season9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountFever</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,d,k;</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n=sc.nextInt();</span><br><span class="line">d=sc.nextInt();</span><br><span class="line">k=sc.nextInt();</span><br><span class="line">Node arr[]=<span class="keyword">new</span> Node[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">arr[i]=<span class="keyword">new</span> Node(sc.nextInt(),sc.nextInt());</span><br><span class="line">Arrays.sort(arr);<span class="comment">//先按id排序，再按ts升序排序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//for(int i = 0; i &lt; n; ++i)&#123;</span></span><br><span class="line"><span class="comment">//System.out.println(arr[i].ts + " " + arr[i].id);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">int</span> curid=arr[<span class="number">0</span>].id;</span><br><span class="line"><span class="keyword">int</span> added=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i+k-<span class="number">1</span>&lt;n&amp;&amp;arr[i+k-<span class="number">1</span>].id==curid&amp;&amp;arr[i+k-<span class="number">1</span>].ts-arr[i].ts&lt;d&amp;&amp;added==<span class="number">0</span>)</span><br><span class="line">&#123;System.out.println(curid);added=<span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(arr[i].id!=curid)</span><br><span class="line">&#123;</span><br><span class="line">curid=arr[i].id;</span><br><span class="line">added=<span class="number">0</span>;</span><br><span class="line">i=i-<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Node</span>&gt;</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ts,id;</span><br><span class="line">Node(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><br><span class="line">&#123;</span><br><span class="line">ts=a;</span><br><span class="line">id=b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Node o)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(id==o.id)</span><br><span class="line"><span class="keyword">return</span> ts-o.ts;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> id-o.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="尺取法"><a href="#尺取法" class="headerlink" title="尺取法"></a>尺取法</h3><blockquote><p>有n个正整数组成一个序列，给定整数S，求长度最短的连续序列，使得他们的和大于等于S<br>设输入的序列为A[i], i=1..n, 构造前缀数组B[j], j=1..n, B[j]=B[j-1]+A[j], 规定B[0]=0, 当B[j]-B[i-1]&gt;=s的时候i增加<br>直至B[j]-B[i]&lt;s, 然后更新最短的满足条件的序列的长度j-i+1，复杂度为O（n）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;time.h&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define N 1200000</span><br><span class="line">#define INF 0x3f3f3f3f</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,T,i,j;</span><br><span class="line"></span><br><span class="line">    scanf(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</span><br><span class="line">        memset(dp,<span class="number">0</span>,sizeof(dp));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">            dp[i]=dp[i-<span class="number">1</span>]+a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> minn=INF,i=<span class="number">1</span>;;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">             <span class="keyword">if</span>(dp[j]-dp[i-<span class="number">1</span>]&lt;m)</span><br><span class="line">                <span class="keyword">continue</span> ;</span><br><span class="line">             <span class="keyword">while</span>(dp[j]-dp[i]&gt;=m)</span><br><span class="line">                i++;</span><br><span class="line">             minn=min(minn,j-i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(minn==INF)</span><br><span class="line">        printf(<span class="string">"0\n"</span>);</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        printf(<span class="string">"%d\n"</span>, minn);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//尺取法做这道题</span></span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,d,k;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; journal[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt;&amp; vec,<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Size=vec.size();</span><br><span class="line">    <span class="keyword">if</span>(Size&lt;k) <span class="keyword">return</span> ;<span class="comment">//点赞条数小于k,肯定不能上热帖</span></span><br><span class="line">    sort(vec.begin(),vec.end());</span><br><span class="line">    <span class="keyword">int</span> st=<span class="number">0</span>,en=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(st&lt;=en&amp;&amp;en&lt;Size)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vec[en]-vec[st]&lt;d)&#123;</span><br><span class="line">            cnt=max(cnt,en-st+<span class="number">1</span>);</span><br><span class="line">            en++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            st++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    cout&lt;&lt;"cnt="&lt;&lt;cnt&lt;&lt;" ";</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(cnt&gt;=k)&#123;</span><br><span class="line">        cout&lt;&lt;id&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;d&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++ )&#123;</span><br><span class="line">        <span class="keyword">int</span> ts,id;</span><br><span class="line">        cin&gt;&gt;ts&gt;&gt;id;</span><br><span class="line">        journal[id].push_back(ts);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;maxn; i++ )&#123;</span><br><span class="line">        judge(journal[i],i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="全球变暖"><a href="#全球变暖" class="headerlink" title="全球变暖"></a>全球变暖</h2><pre>标题：全球变暖你有一张某海域NxN像素的照片，"."表示海洋、"#"表示陆地，如下所示：........##.....##........##...####....###........其中"上下左右"四个方向上连在一起的一片陆地组成一座岛屿。例如上图就有2座岛屿。  由于全球变暖导致了海面上升，科学家预测未来几十年，岛屿边缘一个像素的范围会被海水淹没。具体来说如果一块陆地像素与海洋相邻(上下左右四个相邻像素中有海洋)，它就会被淹没。  例如上图中的海域未来会变成如下样子：................................#................请你计算：依照科学家的预测，照片中有多少岛屿会被完全淹没。  【输入格式】第一行包含一个整数N。  (1 <= 1 7 n <="1000)" 以下n行n列代表一张海域照片。 照片保证第1行、第1列、第n行、第n列的像素都是海洋。 【输出格式】 一个整数表示答案。 【输入样例】 ....... .##.... ....##. ..####. ...###. 【输出样例】 pre><pre><code>思路：不是很懂他的题目描述的输出和输出样例竟然不是一个东西  题目很简单，遍历数组，如果周围（上下左右）有海则被淹没  且因为题目保证“照片保证第1行、第1列、第N行、第N列的像素都是海洋”，所以不用判断边界问题  </code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> N = scanner.nextInt();</span><br><span class="line">scanner.nextLine();</span><br><span class="line"><span class="keyword">char</span>[][] island = <span class="keyword">new</span> <span class="keyword">char</span>[N][N];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i)&#123;</span><br><span class="line">    String str = scanner.nextLine();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; ++j)&#123;</span><br><span class="line">        island[i][j] = str.charAt(j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">scanner.close();</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> countAll = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N-<span class="number">1</span>; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; N-<span class="number">1</span>; ++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(island[i][j] == <span class="string">'#'</span>)&#123;</span><br><span class="line">            countAll++;</span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(island[i-<span class="number">1</span>][j] == <span class="string">'.'</span> || island[i][j-<span class="number">1</span>] == <span class="string">'.'</span> || island[i][j+<span class="number">1</span>] == <span class="string">'.'</span> || island[i+<span class="number">1</span>][j] == <span class="string">'.'</span>)&#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(countAll - count);</span><br></pre></td></tr></table></figure><h2 id="堆的计数（未解决）"><a href="#堆的计数（未解决）" class="headerlink" title="堆的计数（未解决）"></a>堆的计数（未解决）</h2><pre>标题：堆的计数我们知道包含N个元素的堆可以看成是一棵包含N个节点的完全二叉树。  每个节点有一个权值。对于小根堆来说，父节点的权值一定小于其子节点的权值。  假设N个节点的权值分别是1~N，你能求出一共有多少种不同的小根堆吗？  例如对于N=4有如下3种：    1   / \  2   3 /a4    1   / \  3   2 /4    1   / \  2   4 /3由于数量可能超过整型范围，你只需要输出结果除以1000000009的余数。  【输入格式】一个整数N。  对于40%的数据，1 <= 3 4 n <="1000" 对于70%的数据，1 对于100%的数据，1 【输出格式】 一个整数表示答案。 【输入样例】 【输出样例】 pre></=></pre></=></pre></=></pre></=></pre>]]></content>
    
    <summary type="html">
    
      第九届JavaB组省赛题解
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-第八届JavaB组省赛题解</title>
    <link href="http://Chacha-Z.github.io/2019/03/21/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-%E7%AC%AC%E5%85%AB%E5%B1%8AJavaB%E7%BB%84%E7%9C%81%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://Chacha-Z.github.io/2019/03/21/蓝桥杯备考-第八届JavaB组省赛题解/</id>
    <published>2019-03-21T10:27:06.000Z</published>
    <updated>2019-03-23T10:55:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="购物单"><a href="#购物单" class="headerlink" title="购物单"></a>购物单</h2><blockquote><p>标题： 购物单<br>小明刚刚找到工作，老板人很好，只是老板夫人很爱购物。老板忙的时候经常让小明帮忙到商场代为购物。小明很厌烦，但又不好推辞。<br>这不，XX大促销又来了！老板夫人开出了长长的购物单，都是有打折优惠的。<br>小明也有个怪癖，不到万不得已，从不刷卡，直接现金搞定。<br>现在小明很心烦，请你帮他计算一下，需要从取款机上取多少现金，才能搞定这次购物。<br>取款机只能提供100元面额的纸币。小明想尽可能少取些现金，够用就行了。<br>你的任务是计算出，小明最少需要取多少现金。<br>以下是让人头疼的购物单，为了保护隐私，物品名称被隐藏了。</p></blockquote><pre>****     180.90       88****      10.25       65****      56.14        9****     104.65        9****     100.30       88****     297.15        50****      26.75       65****     130.62        50****     240.28       58****     270.62        8****     115.87       88****     247.34       95****      73.21        9****     101.00        50****      79.54        50****     278.44        7****     199.26        50****      12.97        9****     166.30       78****     125.50       58****      84.98        9****     113.35       68****     166.57        50****      42.56        9****      81.90       95****     131.78        8****     255.89       78****     109.17        9****     146.69       68****     139.33       65****     141.16       78****     154.74        8****      59.42        8****      85.44       68****     293.70       88****     261.79       65****      11.30       88****     268.27       58****     128.29       88****     251.03        8****     208.39       75****     128.88       75****      62.06        9****     225.87       75****      12.89       75****      34.28       75****      62.16       58****     129.12        50****     218.37        50****     289.69        8</pre><blockquote><p>需要说明的是，88折指的是按标价的88%计算，而8折是按80%计算，余者类推。<br>特别地，半价是按50%计算。<br>请提交小明要从取款机上提取的金额，单位是元。<br>答案是一个整数，类似4300的样子，结尾必然是00，不要填写任何多余的内容。<br>特别提醒：不许携带计算器入场，也不能打开手机。  </p></blockquote><pre><code>该题手动输入计算器也比较麻烦，对给出的数据做一个整理  将半价改成5， 删去折字  然后考虑怎样读入文本，一行一行的读取（复制进EXCEL里可以知道有多少行），按多个空格split(&quot;\\s+&quot;), 取数组后两个数据正则表达式挺有用的  </code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> N = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">float</span>[][] count = <span class="keyword">new</span> <span class="keyword">float</span>[N][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">String[] str = <span class="keyword">new</span> String[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i)&#123;</span><br><span class="line">    str = scanner.nextLine().split(<span class="string">"\\s+"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)&#123;</span><br><span class="line">        count[i][j] = Float.valueOf(str[j+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i)&#123;</span><br><span class="line">    System.out.println(Arrays.toString(count[i]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(count[i][<span class="number">1</span>] &lt; <span class="number">10</span>)&#123;</span><br><span class="line">        result += count[i][<span class="number">0</span>] * count[i][<span class="number">1</span>]/<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        result += count[i][<span class="number">0</span>] * count[i][<span class="number">1</span>]/<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result);<span class="comment">//5136.8594</span></span><br><span class="line"><span class="comment">//5200</span></span><br></pre></td></tr></table></figure><h2 id="纸牌三角形（暴力）"><a href="#纸牌三角形（暴力）" class="headerlink" title="纸牌三角形（暴力）"></a>纸牌三角形（暴力）</h2><blockquote><p>标题：纸牌三角形<br>A,2,3,4,5,6,7,8,9 共9张纸牌排成一个正三角形（A按1计算）。要求每个边的和相等。<br>下图就是一种排法（如有对齐问题，参看p1.png）。  </p></blockquote><pre>      A     9 6    4   8   3 7 5 2</pre><blockquote><p>这样的排法可能会有很多。<br>如果考虑旋转、镜像后相同的算同一种，一共有多少种不同的排法呢？<br>请你计算并提交该数字。<br>注意：需要提交的是一个整数，不要提交任何多余内容。 </p></blockquote><pre><code>思路：我的猪脑壳没有想出来；这种题就不要找规律了好伐，考虑怎样使用代码模拟别人的脑壳：暴力模拟，循环生成9个不同的数(1-9)，使用边相等条件进行判断  考虑镜像和旋转，一种情况有三种镜像，三种旋转，所以将循环结果/6即可</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a = <span class="number">1</span>; a &lt;= <span class="number">9</span>; ++a)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> b = <span class="number">1</span>; b &lt;= <span class="number">9</span>; ++b)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">1</span>; c &lt;= <span class="number">9</span>; ++c)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> d = <span class="number">1</span>; d &lt;= <span class="number">9</span>; ++d)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> e = <span class="number">1</span>; e &lt;= <span class="number">9</span>; ++e)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> f = <span class="number">1</span>; f &lt;= <span class="number">9</span>; ++f)&#123;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> g = <span class="number">1</span>; g &lt;= <span class="number">9</span>; ++g)&#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> h = <span class="number">1</span>; h &lt;= <span class="number">9</span>; ++h)&#123;</span><br><span class="line">                                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; ++i)&#123;</span><br><span class="line">                                    </span><br><span class="line">                                    <span class="keyword">if</span>(a+b+c+d == d+e+f+g &amp;&amp; a+i+h+g == d+e+f+g)&#123;</span><br><span class="line">                                        <span class="keyword">if</span>(a!=b &amp;&amp; a!=c &amp;&amp; a!=d &amp;&amp; a!=e &amp;&amp; a!=f &amp;&amp; a!=g &amp;&amp; a!=h &amp;&amp; a!=i)&#123;</span><br><span class="line">                                            <span class="keyword">if</span>(b!=c &amp;&amp; b!=d &amp;&amp; b!=e &amp;&amp; b!=f &amp;&amp; b!=g &amp;&amp; b!=h &amp;&amp;b!=i)&#123;</span><br><span class="line">                                                <span class="keyword">if</span>(c!=d &amp;&amp; c!=e &amp;&amp; c!=f &amp;&amp; c!=g &amp;&amp; c!=h &amp;&amp; c!=i)&#123;</span><br><span class="line">                                                    <span class="keyword">if</span>(d!=e &amp;&amp; d!=f &amp;&amp; d!=g &amp;&amp; d!=h &amp;&amp; d!=i)&#123;</span><br><span class="line">                                                        <span class="keyword">if</span>(e!=f &amp;&amp; e!=g &amp;&amp; e!=h &amp;&amp; e!=i)&#123;</span><br><span class="line">                                                            <span class="keyword">if</span>(f!=g &amp;&amp; f!=h &amp;&amp; f!=i)&#123;</span><br><span class="line">                                                                <span class="keyword">if</span>(g!=h &amp;&amp; g!=i)&#123;</span><br><span class="line">                                                                    <span class="keyword">if</span>(h!=i)&#123;</span><br><span class="line">                                                                        sum++;</span><br><span class="line">                                                                    &#125;</span><br><span class="line">                                                                &#125;</span><br><span class="line">                                                            &#125;</span><br><span class="line">                                                        &#125;</span><br><span class="line">                                                    &#125;</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(sum/<span class="number">6</span>);<span class="comment">//144</span></span><br></pre></td></tr></table></figure><h2 id="承压计算"><a href="#承压计算" class="headerlink" title="承压计算"></a>承压计算</h2><blockquote><p>标题：承压计算<br>X星球的高科技实验室中整齐地堆放着某批珍贵金属原料。<br>每块金属原料的外形、尺寸完全一致，但重量不同。<br>金属材料被严格地堆放成金字塔形。  </p></blockquote><pre>                             7                             5 8                            7 8 8                           9 2 7 2                          8 1 4 9 1                         8 1 8 8 4 1                        7 9 6 1 4 5 4                       5 6 5 5 6 9 5 6                      5 5 4 7 9 3 5 5 1                     7 5 7 9 7 4 7 3 3 1                    4 6 4 5 5 8 8 3 2 4 3                   1 1 3 3 1 6 6 5 5 4 4 2                  9 9 9 2 1 9 1 9 2 9 5 7 9                 4 3 3 7 7 9 3 6 1 3 8 8 3 7                3 6 8 1 5 3 9 5 8 3 8 1 8 3 3               8 3 2 3 3 5 5 8 5 4 2 8 6 7 6 9              8 1 8 1 8 4 6 2 2 1 7 9 4 2 3 3 4             2 8 4 2 2 9 9 2 8 3 4 9 6 3 9 4 6 9            7 9 7 4 9 7 6 6 2 8 9 4 1 8 1 7 2 1 6           9 2 8 6 4 2 7 9 5 4 1 2 5 1 7 3 9 8 3 3          5 2 1 6 7 9 3 2 8 9 5 5 6 6 6 2 1 8 7 9 9         6 7 1 8 8 7 5 3 6 5 4 7 3 4 6 7 8 1 3 2 7 4        2 2 6 3 5 3 4 9 2 4 5 7 6 6 3 2 7 2 4 8 5 5 4       7 4 4 5 8 3 3 8 1 8 6 3 2 1 6 2 6 4 6 3 8 2 9 6      1 2 4 1 3 3 5 3 4 9 6 3 8 6 5 9 1 5 3 2 6 8 8 5 3     2 2 7 9 3 3 2 8 6 9 8 4 4 9 5 8 2 6 3 4 8 4 9 3 8 8    7 7 7 9 7 5 2 7 9 2 5 1 9 2 6 5 3 9 3 5 7 3 5 4 2 8 9   7 7 6 6 8 7 5 5 8 2 4 7 7 4 7 2 6 9 2 1 8 2 9 8 5 7 3 6  5 9 4 5 5 7 5 5 6 3 5 3 9 5 8 9 5 4 1 2 6 1 4 3 5 3 2 4 1 X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X </pre><blockquote><p>其中的数字代表金属块的重量（计量单位较大）。<br>最下一层的X代表30台极高精度的电子秤。<br>假设每块原料的重量都十分精确地平均落在下方的两个金属块上，<br>最后，所有的金属块的重量都严格精确地平分落在最底层的电子秤上。<br>电子秤的计量单位很小，所以显示的数字很大。<br>工作人员发现，其中读数最小的电子秤的示数为：2086458231<br>请你推算出：读数最大的电子秤的示数为多少？<br>注意：需要提交的是一个整数，不要填写任何多余的内容。  </p></blockquote><pre><code>我的思路：我的脑子还是有思路的，使用另一个数组存放各行各列重量，[i, j]等于上一层[i-1, j-1]/2+[i-1][j]/2再加上当前层金属块重量    （边界单独判断就是了）（记住数组初始化后默认赋值为0）不必考虑金字塔形状，反正往左对齐位置关系都不变就完事儿了  重点：1. 单位不是1，需要根据最小示数推算单位       2. 因为涉及到除法，考虑数值精度，一开始使用float类型发现结果不对，是小数</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">double</span>[][] dp = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span>[][] arr = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">29</span>; ++i)&#123;</span><br><span class="line">    String[] temp = scanner.nextLine().trim().split(<span class="string">" "</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; temp.length; ++j)&#123;</span><br><span class="line">        arr[i][j] = Float.valueOf((temp[j]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>] = arr[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">30</span>; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">30</span>; ++j)&#123;</span><br><span class="line">        <span class="comment">//(i-1, j-1) (i-1, j)</span></span><br><span class="line">        dp[i][j] = arr[i][j];   </span><br><span class="line">        <span class="keyword">if</span>(j - <span class="number">1</span> &gt;= <span class="number">0</span>)&#123; <span class="comment">//边界</span></span><br><span class="line">            dp[i][j] += dp[i-<span class="number">1</span>][j-<span class="number">1</span>]/<span class="number">2</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        dp[i][j] += dp[i-<span class="number">1</span>][j]/<span class="number">2</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> max = Double.MIN_VALUE;</span><br><span class="line"><span class="keyword">double</span> min = Double.MAX_VALUE;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; ++i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(dp[<span class="number">29</span>][i] &gt; max)&#123;</span><br><span class="line">        max = dp[<span class="number">29</span>][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dp[<span class="number">29</span>][i] &lt; min)&#123;</span><br><span class="line">        min = dp[<span class="number">29</span>][i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="number">2086458231</span>/min);</span><br><span class="line">System.out.println(max);</span><br><span class="line">System.out.println(<span class="number">2086458231</span>/min*max);</span><br><span class="line"></span><br><span class="line"><span class="comment">//7.2665192664E10 = 72665192664</span></span><br></pre></td></tr></table></figure><h2 id="魔方状态（未解决）"><a href="#魔方状态（未解决）" class="headerlink" title="魔方状态（未解决）"></a>魔方状态（未解决）</h2><blockquote><p>标题：魔方状态<br>二阶魔方就是只有2层的魔方，只由8个小块组成。<br>如图p1.png所示。<br><img src="/2019/03/21/蓝桥杯备考-第八届JavaB组省赛题解/p1.png" alt="魔方"><br>小明很淘气，他只喜欢3种颜色，所有把家里的二阶魔方重新涂了颜色，如下：<br>前面：橙色<br>右面：绿色<br>上面：黄色<br>左面：绿色<br>下面：橙色<br>后面：黄色<br>请你计算一下，这样的魔方被打乱后，一共有多少种不同的状态。<br>如果两个状态经过魔方的整体旋转后，各个面的颜色都一致，则认为是同一状态。<br>请提交表示状态数的整数，不要填写任何多余内容或说明文字。  </p></blockquote><h2 id="取位数"><a href="#取位数" class="headerlink" title="取位数"></a>取位数</h2><blockquote><p>标题：取数位<br>求1个整数的第k位数字有很多种方法。<br>以下的方法就是一种。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">len</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">10</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> len(x/<span class="number">10</span>)+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取x的第k位数字</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(len(x)-k==<span class="number">0</span>) <span class="keyword">return</span> x%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> ______________________;  <span class="comment">//填空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">23513</span>;</span><br><span class="line"><span class="comment">//System.out.println(len(x));</span></span><br><span class="line">System.out.println(f(x,<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>对于题目中的测试数据，应该打印5。<br>请仔细分析源码，并补充划线部分所缺少的代码。<br>注意：只提交缺失的代码，不要填写任何已有内容或说明性的文字。  </p></blockquote><pre><code>思路：这道题太坑了，我为了证明他说的第k位是从左起的还是从右起的用了好久  按常理应该是从最小位算第一位啊，而且从左起的话代码简单到我怀疑自己  可是看网上大家的答案，好像只有我一个人有这个问题，姑且认为他从左起的吧  代码很简单，就是一个简单的递归，/10，使数值长度等于要取的位数K时返回对10取余的值（即此时的最低位）</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> f(x/<span class="number">10</span>, k);  <span class="comment">//填空</span></span><br></pre></td></tr></table></figure><h2 id="最大公共子串"><a href="#最大公共子串" class="headerlink" title="最大公共子串"></a>最大公共子串</h2><blockquote><p>标题：最大公共子串<br>最大公共子串长度问题就是：<br>求两个串的所有子串中能够匹配上的最大长度是多少。<br>比如：”abcdkkk” 和 “baabcdadabc”，<br>可以找到的最长的公共子串是”abcd”,所以最大公共子串长度为4。<br>下面的程序是采用矩阵法进行求解的，这对串的规模不大的情况还是比较有效的解法。<br>请分析该解法的思路，并补全划线部分缺失的代码。  </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(String s1, String s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>[] c1 = s1.toCharArray();</span><br><span class="line"><span class="keyword">char</span>[] c2 = s2.toCharArray();</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[][] a = <span class="keyword">new</span> <span class="keyword">int</span>[c1.length+<span class="number">1</span>][c2.length+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;a.length; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;a[i].length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(c1[i-<span class="number">1</span>]==c2[j-<span class="number">1</span>]) &#123;</span><br><span class="line">a[i][j] = __________________;  <span class="comment">//填空 </span></span><br><span class="line"><span class="keyword">if</span>(a[i][j] &gt; max) max = a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = f(<span class="string">"abcdkkk"</span>, <span class="string">"baabcdadabc"</span>);</span><br><span class="line">System.out.println(n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：只提交缺少的代码，不要提交已有的代码和符号。也不要提交说明性文字。</p></blockquote><pre><code>思路：很奇妙的代码，感觉自己永远也想不到要这样做  但是仔细分析以下还是能够懂， 画个图  理清他构造的a二维数组存的是什么，行和列分别是什么，就很好懂  行和列分别代表对应串，然后比如将s1的当前字母分别和s2的各个字母比较，如果相同  我们可以知道，如果两个串有对应相同的长度大于等于2的子串时，一定可以在二维数组上连成一条斜线  且因为构造的a二维数组比原字符串长一个单位，用在第一行和第一列，这时候默认值是0对于理解这个就显得很重要  </code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[i][j] = a[i-<span class="number">1</span>][j-<span class="number">1</span>]+<span class="number">1</span>; <span class="comment">//填空</span></span><br></pre></td></tr></table></figure><h2 id="日期问题"><a href="#日期问题" class="headerlink" title="日期问题"></a>日期问题</h2><blockquote><p>标题：日期问题<br>小明正在整理一批历史文献。这些历史文献中出现了很多日期。小明知道这些日期都在1960年1月1日至2059年12月31日。<br>令小明头疼的是，这些日期采用的格式非常不统一，有采用年/月/日的，有采用月/日/年的，还有采用日/月/年的。<br>更加麻烦的是，年份也都省略了前两位，使得文献上的一个日期，存在很多可能的日期与其对应。<br>比如02/03/04，可能是2002年03月04日、2004年02月03日或2004年03月02日。<br>给出一个文献上的日期，你能帮助小明判断有哪些可能的日期对其对应吗？  </p></blockquote><blockquote><p>输入<br>一个日期，格式是”AA/BB/CC”。  (0 &lt;= A, B, C &lt;= 9)<br>输入<br>输出若干个不相同的日期，每个日期一行，格式是”yyyy-MM-dd”。多个日期按从早到晚排列。<br>样例输入<br>02/03/04<br>样例输出<br>2002-03-04<br>2004-02-03<br>2004-03-02<br>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms  </p></blockquote><pre><code>思路：思路还是很简单的说一下要注意的细节，写半天了才发现题没看清  日期格式只有“年/月/日，月/日/年，日/月/年”  对二月、闰年等需要单独判断难点：要求从小到大输出 - 将年月日乘以对应比列形成一个整数，在对该整数数组进行排序，还原输出总觉得自己思路很乱，代码更乱</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> season8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 从小到大输出？？</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Seven_PossibleTime</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">String[] temp = scanner.nextLine().split(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">int</span>[] time = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt; <span class="number">3</span>; ++i)&#123;</span><br><span class="line">time[i] = Integer.valueOf(temp[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] z = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> year = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> month = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> day = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(canBeYear(time[<span class="number">0</span>]))&#123;</span><br><span class="line">year = time[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(canBeMonth(time[<span class="number">1</span>]))&#123;</span><br><span class="line">month = time[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(canBeDay(year, month, time[<span class="number">2</span>]))&#123;</span><br><span class="line">day = time[<span class="number">2</span>];</span><br><span class="line"><span class="comment">//System.out.println(createYear(year) + "-" + createMonth(month) + "-" + createDay(day));</span></span><br><span class="line">z[count++] = createYear(year)*<span class="number">10000</span>+month*<span class="number">100</span>+day;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(canBeYear(time[<span class="number">2</span>]))&#123;</span><br><span class="line">year = time[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">if</span>(canBeMonth(time[<span class="number">0</span>]))&#123;</span><br><span class="line">month = time[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(canBeDay(year, month, time[<span class="number">1</span>]))&#123;</span><br><span class="line">day = time[<span class="number">1</span>];</span><br><span class="line"><span class="comment">//System.out.println(createYear(year) + "-" + createMonth(month) + "-" + createDay(day));</span></span><br><span class="line">z[count++] = createYear(year)*<span class="number">10000</span>+month*<span class="number">100</span>+day;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(canBeMonth(time[<span class="number">1</span>]))&#123;</span><br><span class="line">month = time[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(canBeDay(year, month, time[<span class="number">0</span>]))&#123;</span><br><span class="line">day = time[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//System.out.println(createYear(year) + "-" + createMonth(month) + "-" + createDay(day));</span></span><br><span class="line">z[count++] = createYear(year)*<span class="number">10000</span>+month*<span class="number">100</span>+day;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Arrays.sort(z);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> y = z[i]/<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">int</span> m = z[i]/<span class="number">100</span>%<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> d = z[i]%<span class="number">100</span>;</span><br><span class="line">System.out.println(y + <span class="string">"-"</span> + createMonth(m) + <span class="string">"-"</span> + createDay(d));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">createYear</span><span class="params">(<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y &lt;= <span class="number">59</span>)&#123;</span><br><span class="line"><span class="keyword">return</span>  y + <span class="number">2000</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> y + <span class="number">1900</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createMonth</span><span class="params">(<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m &lt; <span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"0"</span>+m;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> Integer.toString(m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createDay</span><span class="params">(<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d &lt; <span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"0"</span>+d;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> Integer.toString(d);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">canBeYear</span><span class="params">(<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y &lt;= <span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">canBeMonth</span><span class="params">(<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m &lt;= <span class="number">12</span> &amp;&amp; m &gt;= <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">canBeDay</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> m, <span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d &gt;= <span class="number">32</span> || d &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(m == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(d &gt; <span class="number">29</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d == <span class="number">29</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!ifLeapYear(y))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!ifBigMonth(m))&#123;</span><br><span class="line"><span class="keyword">if</span>(d == <span class="number">31</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//闰年二月有29号，非闰年二月只到28号</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">ifLeapYear</span><span class="params">(<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y &lt;= <span class="number">59</span>)&#123;</span><br><span class="line">y += <span class="number">2000</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">y += <span class="number">1900</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(y % <span class="number">400</span> == <span class="number">0</span> || (y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">ifBigMonth</span><span class="params">(<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m == <span class="number">1</span> || m == <span class="number">3</span> || m == <span class="number">5</span> || m == <span class="number">7</span> || m == <span class="number">8</span> || m == <span class="number">10</span> || m == <span class="number">12</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="包子凑数（未解决）"><a href="#包子凑数（未解决）" class="headerlink" title="包子凑数（未解决）"></a>包子凑数（未解决）</h2><blockquote><p>标题：包子凑数<br>小明几乎每天早晨都会在一家包子铺吃早餐。他发现这家包子铺有N种蒸笼，其中第i种蒸笼恰好能放Ai个包子。<br>每种蒸笼都有非常多笼，可以认为是无限笼。<br>每当有顾客想买X个包子，卖包子的大叔就会迅速选出若干笼包子来，使得这若干笼中恰好一共有X个包子。<br>比如一共有3种蒸笼，分别能放3、4和5个包子。当顾客想买11个包子时，大叔就会选2笼3个的再加1笼5个的（也可能选出1笼3个的再加2笼4个的）。<br>当然有时包子大叔无论如何也凑不出顾客想买的数量。比如一共有3种蒸笼，分别能放4、5和6个包子。而顾客想买7个包子时，大叔就凑不出来了。<br>小明想知道一共有多少种数目是包子大叔凑不出来的。  </p></blockquote><blockquote><p>输入<br>第一行包含一个整数N。(1 &lt;= N &lt;= 100)<br>以下N行每行包含一个整数Ai。(1 &lt;= Ai &lt;= 100)<br>输出<br>一个整数代表答案。如果凑不出的数目有无限多个，输出INF。  </p></blockquote><blockquote><p>例如，<br>输入：<br>2<br>4<br>5<br>程序应该输出：<br>6  </p></blockquote><blockquote><p>再例如，<br>输入：<br>2<br>4<br>6<br>程序应该输出：<br>INF<br>样例解释：<br>对于样例1，凑不出的数目包括：1, 2, 3, 6, 7, 11。<br>对于样例2，所有奇数都凑不出来，所以有无限多个。  </p></blockquote><h2 id="分巧克力"><a href="#分巧克力" class="headerlink" title="分巧克力"></a>分巧克力</h2><blockquote><p>标题： 分巧克力<br>儿童节那天有K位小朋友到小明家做客。小明拿出了珍藏的巧克力招待小朋友们。<br>小明一共有N块巧克力，其中第i块是Hi x Wi的方格组成的长方形。<br>为了公平起见，小明需要从这 N 块巧克力中切出K块巧克力分给小朋友们。切出的巧克力需要满足：  </p><pre><code>1. 形状是正方形，边长是整数    2. 大小相同   </code></pre><p>例如一块6x5的巧克力可以切出6块2x2的巧克力或者2块3x3的巧克力。<br>当然小朋友们都希望得到的巧克力尽可能大，你能帮小Hi计算出最大的边长是多少么？  </p></blockquote><blockquote><p>输入<br>第一行包含两个整数N和K。(1 &lt;= N, K &lt;= 100000)<br>以下N行每行包含两个整数Hi和Wi。(1 &lt;= Hi, Wi &lt;= 100000)<br>输入保证每位小朋友至少能获得一块1x1的巧克力。<br>输出<br>输出切出的正方形巧克力最大可能的边长。</p></blockquote><blockquote><p>样例输入：<br>2 10<br>6 5<br>5 6<br>样例输出：<br>2</p></blockquote><pre><code>思路：因为需要输出尽可能大，所以从最大边长往回循环  循环每个边长，计算该边长能分多少块巧克力，第一个大于可分块数大于等于小朋友人数的边长为所求</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Nine_DivedChoclate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> N = scanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> K = scanner.nextInt();</span><br><span class="line"><span class="keyword">int</span>[][] cho = <span class="keyword">new</span> <span class="keyword">int</span>[N][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxSide = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; ++j)&#123;</span><br><span class="line">cho[i][j] = scanner.nextInt();</span><br><span class="line"><span class="keyword">if</span>(cho[i][j] &gt; maxSide)&#123;</span><br><span class="line">maxSide = cho[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = maxSide; k &gt; <span class="number">0</span>; --k)&#123;<span class="comment">//切分边长</span></span><br><span class="line"><span class="keyword">int</span> tempK = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> height = cho[i][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> width = cho[i][<span class="number">1</span>];</span><br><span class="line">tempK += singleDivide(width, height, k);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(tempK &gt;= K)&#123;</span><br><span class="line">result = k;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(result);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">singleDivide</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">int</span> L)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(width &lt; L || height &lt; L)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (height/L)*(width/L);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="k倍区间（未解决）"><a href="#k倍区间（未解决）" class="headerlink" title="k倍区间（未解决）"></a>k倍区间（未解决）</h2><blockquote><p>标题： k倍区间<br>给定一个长度为N的数列，A1, A2, … AN，<br>如果其中一段连续的子序列Ai, Ai+1, … Aj(i &lt;= j)之和是K的倍数，<br>我们就称这个区间[i, j]是K倍区间。<br>你能求出数列中总共有多少个K倍区间吗？    </p></blockquote><blockquote><p>输入<br>第一行包含两个整数N和K。(1 &lt;= N, K &lt;= 100000)<br>以下N行每行包含一个整数Ai。(1 &lt;= Ai &lt;= 100000)<br>输出<br>输出一个整数，代表K倍区间的数目。<br>例如，<br>输入：<br>5 2<br>1<br>2<br>3<br>4<br>5<br>程序应该输出：<br>6  </p></blockquote>]]></content>
    
    <summary type="html">
    
      第八届JavaB组省赛题解
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-第七届JavaB组省赛题解</title>
    <link href="http://Chacha-Z.github.io/2019/03/21/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-%E7%AC%AC%E4%B8%83%E5%B1%8AJavaB%E7%BB%84%E7%9C%81%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://Chacha-Z.github.io/2019/03/21/蓝桥杯备考-第七届JavaB组省赛题解/</id>
    <published>2019-03-21T07:48:27.000Z</published>
    <updated>2019-03-23T10:55:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="煤球数目"><a href="#煤球数目" class="headerlink" title="煤球数目"></a>煤球数目</h2><blockquote><p>煤球数目<br>有一堆煤球，堆成三角棱锥形。具体：<br>第一层放1个，<br>第二层3个（排列成三角形），<br>第三层6个（排列成三角形），<br>第四层10个（排列成三角形），<br>….<br>如果一共有100层，共有多少个煤球？<br>请填表示煤球总数目的数字。<br>注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p></blockquote><pre><code>画半天（为了确定规律，比赛的时候就要不证明了），其实从前面几个数字能看出来规律，{1, 3, 6, 10...}，分别为前一层{+2, +3, +4...}</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> step = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; ++i)&#123;</span><br><span class="line">    sum += count;</span><br><span class="line">    step++;</span><br><span class="line">    count += step;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(sum);<span class="comment">//171700</span></span><br></pre></td></tr></table></figure><h2 id="生日蜡烛"><a href="#生日蜡烛" class="headerlink" title="生日蜡烛"></a>生日蜡烛</h2><blockquote><p>生日蜡烛<br>某君从某年开始每年都举办一次生日party，并且每次都要吹熄与年龄相同根数的蜡烛。<br>现在算起来，他一共吹熄了236根蜡烛。<br>请问，他从多少岁开始过生日party的？<br>请填写他开始过生日party的年龄数。<br>注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p></blockquote><pre><code>思路：分别循环确定起始年龄和结束年龄，然后再遍历一次求区间和（怎么有点像暴力求最大子列和；看了看，我为什么要从后面遍历？这样就不能利用前一次循环的结果了，脑子不太好用）</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> e = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">outer: <span class="keyword">for</span>(<span class="keyword">int</span> begin = <span class="number">1</span>; begin &lt;= <span class="number">100</span>; ++begin)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> end = <span class="number">100</span>; end &gt;= begin; --end)&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = begin; i &lt;= end; ++i)&#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum == <span class="number">236</span>)&#123;</span><br><span class="line">            s = begin;</span><br><span class="line">            e = end;</span><br><span class="line">            <span class="keyword">break</span> outer;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(s + <span class="string">" - "</span> + e);</span><br><span class="line"><span class="comment">//26 - 33</span></span><br></pre></td></tr></table></figure><pre><code>改一改，end从begin开始循环</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">outer: <span class="keyword">for</span>(<span class="keyword">int</span> begin = <span class="number">1</span>; begin &lt;= <span class="number">100</span>; ++begin)&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = begin;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> end = begin+<span class="number">1</span>; end &lt;= <span class="number">100</span>; ++end)&#123;</span><br><span class="line">        sum += end;</span><br><span class="line">        <span class="keyword">if</span>(sum == <span class="number">236</span>)&#123;</span><br><span class="line">            s = begin;</span><br><span class="line">            e = end;</span><br><span class="line">            <span class="keyword">break</span> outer;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(sum &gt; <span class="number">236</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>这样子退出循环有点想GOTO，是不是不太好，改一改，试一试用标志变量退出循环。我去，找到了就直接打印啊，何必哪个数来存，或者还要担心+-1的问题</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> begin = <span class="number">1</span>, end = begin;</span><br><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">for</span>(begin = <span class="number">1</span>; begin &lt; <span class="number">100</span> &amp;&amp; flag; ++begin)&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = begin;</span><br><span class="line">    end = begin+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">        sum += end;</span><br><span class="line">        <span class="keyword">if</span>(sum == <span class="number">236</span>)&#123;</span><br><span class="line">            System.out.println(begin + <span class="string">" - "</span> + end);</span><br><span class="line">            <span class="comment">//26 - 33</span></span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(sum &gt; <span class="number">236</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        end++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="凑算式"><a href="#凑算式" class="headerlink" title="凑算式"></a>凑算式</h2><blockquote><p>凑算式  </p></blockquote><pre>     B      DEFA + --- + ------- = 10     C      GHI</pre><blockquote><p>这个算式中A~I代表1~9的数字，不同的字母代表不同的数字。<br>比如：<br>6+8/3+952/714 就是一种解法，<br>5+3/1+972/486 是另一种解法。<br>这个算式一共有多少种解法？<br>注意：你提交应该是个整数，不要填写任何多余的内容或说明性文字。</p></blockquote><pre><code>暴力，循环ABCDEFGHI分别取一到九，排除相等的情况注意：因为整数除整数等于整数，所以注意数据类型转换另一种方法：DFS - 扩展基础，dfs全排列1-9</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> season7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Three_ExpressionTen</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a = <span class="number">1</span>; a &lt;= <span class="number">9</span>; ++a)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b = <span class="number">1</span>; b &lt;= <span class="number">9</span>; ++b)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">1</span>; c &lt;= <span class="number">9</span>; ++c)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> d = <span class="number">1</span>; d &lt;= <span class="number">9</span>; ++d)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> e = <span class="number">1</span>; e &lt;= <span class="number">9</span>; ++e)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> f = <span class="number">1</span>; f &lt;= <span class="number">9</span>; ++f)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> g = <span class="number">1</span>; g &lt;= <span class="number">9</span>; ++g)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> h = <span class="number">1</span>; h &lt;= <span class="number">9</span>; ++h)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; ++i)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(a!=b &amp;&amp; a!=c &amp;&amp; a!=d &amp;&amp; a!=e &amp;&amp; a!=f &amp;&amp; a!=g &amp;&amp; a!=h &amp;&amp; a!=i)&#123;</span><br><span class="line"><span class="keyword">if</span>(b!=c &amp;&amp; b!=d &amp;&amp; b!=e &amp;&amp; b!=f &amp;&amp; b!=g &amp;&amp; b!=h &amp;&amp;b!=i)&#123;</span><br><span class="line"><span class="keyword">if</span>(c!=d &amp;&amp; c!=e &amp;&amp; c!=f &amp;&amp; c!=g &amp;&amp; c!=h &amp;&amp; c!=i)&#123;</span><br><span class="line"><span class="keyword">if</span>(d!=e &amp;&amp; d!=f &amp;&amp; d!=g &amp;&amp; d!=h &amp;&amp; d!=i)&#123;</span><br><span class="line"><span class="keyword">if</span>(e!=f &amp;&amp; e!=g &amp;&amp; e!=h &amp;&amp; e!=i)&#123;</span><br><span class="line"><span class="keyword">if</span>(f!=g &amp;&amp; f!=h &amp;&amp; f!=i)&#123;</span><br><span class="line"><span class="keyword">if</span>(g!=h &amp;&amp; g!=i)&#123;</span><br><span class="line"><span class="keyword">if</span>(h!=i)&#123;</span><br><span class="line"><span class="keyword">if</span>(a + (<span class="keyword">float</span>)b/c + ((<span class="keyword">float</span>)((d*<span class="number">100</span>)+(e*<span class="number">10</span>)+f))/((g*<span class="number">100</span>)+(h*<span class="number">10</span>)+i) == <span class="number">10</span>)&#123;</span><br><span class="line">count++;</span><br><span class="line"><span class="comment">//System.out.println(a + " " + b + " " + c + " " + ((d*100)+(e*10)+f) + " " + ((g*100)+(h*10)+i));</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(count);<span class="comment">//29</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>还有一种暴力循环模板，效率应该会好那么一点点点点</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; ++a)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">9</span>; ++b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b == a) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">0</span>; c &lt;= <span class="number">9</span>; ++c)&#123;</span><br><span class="line">            <span class="keyword">if</span>(c == a || c == b) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> d = <span class="number">0</span>; d &lt;= <span class="number">9</span>; ++d)&#123;</span><br><span class="line">                <span class="keyword">if</span>(d == a || d == b || d == c) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> e = <span class="number">0</span>; e &lt;= <span class="number">9</span>; ++e)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(e == a || e == b || e == c || e == d) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> f = <span class="number">0</span>; f &lt;= <span class="number">9</span>; ++f)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(f == a || f == b || f == c || f == d || f == e) <span class="keyword">continue</span>;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> g = <span class="number">0</span>; g &lt;= <span class="number">9</span>; ++g)&#123;</span><br><span class="line">                            <span class="keyword">if</span>(g == a || g == b || g == c || g == d || g == e || g == f) <span class="keyword">continue</span>;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> h = <span class="number">0</span>; h &lt;= <span class="number">9</span>; ++h)&#123;</span><br><span class="line">                                <span class="keyword">if</span>(h == a || h == b || h == c || h == d || h == e || h == f || h == g) <span class="keyword">continue</span>;</span><br><span class="line">                                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i)&#123;</span><br><span class="line">                                    <span class="keyword">if</span>(i == a || i == b || i == c || i == d || i == e || i == f || i == g || i == h) <span class="keyword">continue</span>;</span><br><span class="line">                                    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">9</span>; ++j)&#123;</span><br><span class="line">                                        <span class="keyword">if</span>(j == a || j == b || j == c || j == d || j == e || j == f || j == g || j == h || j == i) <span class="keyword">continue</span>;</span><br><span class="line">                                            <span class="comment">//OPERATION</span></span><br><span class="line">                                        &#125;</span><br><span class="line">                                            </span><br><span class="line">                                    &#125;</span><br><span class="line">                                    </span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a>全排列</h3><blockquote><p>将1-9全排列</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dfs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrangeOneToNine</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>];</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span>[] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">dfs(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> step)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(step == <span class="number">9</span>)&#123;</span><br><span class="line">System.out.println(Arrays.toString(a));</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(visited[i] == <span class="keyword">false</span>)&#123;</span><br><span class="line">visited[i] = <span class="keyword">true</span>;</span><br><span class="line">a[step] = i;</span><br><span class="line">dfs(step+<span class="number">1</span>);</span><br><span class="line">visited[i] = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>DFS全排列解决这道题</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> season7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Three_DFS</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span>[] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line">System.out.println(count);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> step)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(step == <span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(check())&#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//System.out.println(Arrays.toString(a));</span></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(visited[i] == <span class="keyword">false</span>)&#123;</span><br><span class="line">visited[i] = <span class="keyword">true</span>;</span><br><span class="line">a[step] = i;</span><br><span class="line">dfs(step+<span class="number">1</span>);</span><br><span class="line">visited[i] = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> q=a[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">double</span> w=a[<span class="number">2</span>]*<span class="number">1.00</span>/a[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">double</span> e=(a[<span class="number">4</span>]*<span class="number">100</span>+a[<span class="number">5</span>]*<span class="number">10</span>+a[<span class="number">6</span>])*<span class="number">1.00</span>/(a[<span class="number">7</span>]*<span class="number">100</span>+a[<span class="number">8</span>]*<span class="number">10</span>+a[<span class="number">9</span>]);</span><br><span class="line">        <span class="keyword">if</span>(q+w+e==<span class="number">10.00</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分小组"><a href="#分小组" class="headerlink" title="分小组"></a>分小组</h2><blockquote><p>分小组<br>9名运动员参加比赛，需要分3组进行预赛。<br>有哪些分组的方案呢？<br>我们标记运动员为 A,B,C,… I<br>下面的程序列出了所有的分组方法。<br>该程序的正常输出为：<br>ABC DEF GHI<br>ABC DEG FHI<br>ABC DEH FGI<br>ABC DEI FGH<br>ABC DFG EHI<br>ABC DFH EGI<br>ABC DFI EGH<br>ABC DGH EFI<br>ABC DGI EFH<br>ABC DHI EFG<br>ABC EFG DHI<br>ABC EFH DGI<br>ABC EFI DGH<br>ABC EGH DFI<br>ABC EGI DFH<br>ABC EHI DFG<br>ABC FGH DEI<br>ABC FGI DEH<br>ABC FHI DEG<br>ABC GHI DEF<br>ABD CEF GHI<br>ABD CEG FHI<br>ABD CEH FGI<br>ABD CEI FGH<br>ABD CFG EHI<br>ABD CFH EGI<br>ABD CFI EGH<br>ABD CGH EFI<br>ABD CGI EFH<br>ABD CHI EFG<br>ABD EFG CHI<br>….. (以下省略，总共560行)。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">remain</span><span class="params">(<span class="keyword">int</span>[] a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">String s = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a.length; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] == <span class="number">0</span>) s += (<span class="keyword">char</span>)(i+<span class="string">'A'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(String s, <span class="keyword">int</span>[] a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a.length; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;a.length; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>; k&lt;a.length; k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[k]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">a[k]=<span class="number">1</span>;</span><br><span class="line">System.out.println(________);  <span class="comment">//填空位置</span></span><br><span class="line">a[k]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">1</span>; b&lt;a.length; b++)&#123;</span><br><span class="line">a[b] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> c=b+<span class="number">1</span>; c&lt;a.length; c++)&#123;</span><br><span class="line">a[c] = <span class="number">1</span>;</span><br><span class="line">String s = <span class="string">"A"</span> + (<span class="keyword">char</span>)(b+<span class="string">'A'</span>) + (<span class="keyword">char</span>)(c+<span class="string">'A'</span>);</span><br><span class="line">f(s,a);</span><br><span class="line">a[c] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[b] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>仔细阅读代码，填写划线部分缺少的内容。<br>注意：不要填写任何已有内容或说明性文字。</p></blockquote><pre><code>代码填空题，把代码复制进ECLIPSE，删除横线；这套题真的很坑啊！九个人分三组的结果应该是280，我纠结好久数学怎样排列组合；说一下代码思路：固定A在第一个不变，当前遍历位置置为1；  主要看一下remian()函数，发现在给出来的代码中没有一个地方用到了remain函数，试着在填空处将s+remain()输出，remain()是输出遍历为1之外的位置的值，s是main函数里遍历得到的三个字母，一共输出6个字母，发现就f函数遍历为1的三个位置的值没有输出，根据给出实例，找到应该输出的s remain和f遍历出的位置关系，填入</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(s + <span class="string">" "</span>+ (<span class="keyword">char</span>)(<span class="string">'A'</span>+i)+(<span class="keyword">char</span>)(<span class="string">'A'</span>+j)+(<span class="keyword">char</span>)(<span class="string">'A'</span>+k) + <span class="string">" "</span> + remain(a));  <span class="comment">//填空位置</span></span><br></pre></td></tr></table></figure><h2 id="抽签"><a href="#抽签" class="headerlink" title="抽签"></a>抽签</h2><blockquote><p>抽签<br>X星球要派出一个5人组成的观察团前往W星。<br>其中：<br>A国最多可以派出4人。<br>B国最多可以派出2人。<br>C国最多可以派出2人。<br>….<br>那么最终派往W星的观察团会有多少种国别的不同组合呢？<br>下面的程序解决了这个问题。<br>数组a[] 中既是每个国家可以派出的最多的名额。<br>程序执行结果为：<br>DEFFF<br>CEFFF<br>CDFFF<br>CDEFF<br>CCFFF<br>CCEFF<br>CCDFF<br>CCDEF<br>BEFFF<br>BDFFF<br>BDEFF<br>BCFFF<br>BCEFF<br>BCDFF<br>BCDEF<br>….<br>(以下省略，总共101行)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> k, <span class="keyword">int</span> n, String s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k==a.length)&#123; </span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>) System.out.println(s);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String s2 = s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=a[k]; i++)&#123;</span><br><span class="line">_____________________________;   <span class="comment">//填空位置</span></span><br><span class="line">s2 += (<span class="keyword">char</span>)(k+<span class="string">'A'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] a = &#123;<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">f(a,<span class="number">0</span>,<span class="number">5</span>,<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>仔细阅读代码，填写划线部分缺少的内容。<br>注意：不要填写任何已有内容或说明性文字。</p></blockquote><pre><code>思路：注意理解k和n分别是什么，k是当前循环国家（所以f中循环是在当前循环国家的人数内循环），n是需要派出的人数  别忘了这是一道递归题（这很明显，并且存在递归结束条件），使用递归的思想思考，当前k国派出i个人后，下一个循环国家k+1国，还需要派出n-i个人。  注意不要走远了，一般代码填空题就一行代码  </code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(a, k+<span class="number">1</span>, n-i, s2); <span class="comment">//填空位置</span></span><br></pre></td></tr></table></figure><h2 id="方格填数"><a href="#方格填数" class="headerlink" title="方格填数"></a>方格填数</h2><blockquote><p>方格填数<br>如下的10个格子</p></blockquote><p><pre><br>   +–+–+–+<br>   |  |  |  |<br>+–+–+–+–+<br>|  |  |  |  |<br>+–+–+–+–+<br>|  |  |  |<br>+–+–+–+<br></pre></p><blockquote><p>填入0~9的数字。要求：连续的两个数字不能相邻。<br>（左右、上下、对角都算相邻）<br>一共有多少种可能的填数方案？<br>请填写表示方案数目的整数。<br>注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p></blockquote><pre><code>填空题想到了K好数问题，往这个方向思考半天无果（K好数是一维问题，这个是二维）暴力循环：什么二维数组，不要想了；为每一个格子设置一个变量来表示，每个变量分别取值0-9（确保不一样），然后当前变量是否和它的相邻变量连续  第二种方法：同样是一个排列全部数字的dfs</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> season7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Six_FillGrid</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span>[][] grid = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; ++a)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">9</span>; ++b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b == a) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">0</span>; c &lt;= <span class="number">9</span>; ++c)&#123;</span><br><span class="line"><span class="keyword">if</span>(c == a || c == b) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> d = <span class="number">0</span>; d &lt;= <span class="number">9</span>; ++d)&#123;</span><br><span class="line"><span class="keyword">if</span>(d == a || d == b || d == c) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> e = <span class="number">0</span>; e &lt;= <span class="number">9</span>; ++e)&#123;</span><br><span class="line"><span class="keyword">if</span>(e == a || e == b || e == c || e == d) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> f = <span class="number">0</span>; f &lt;= <span class="number">9</span>; ++f)&#123;</span><br><span class="line"><span class="keyword">if</span>(f == a || f == b || f == c || f == d || f == e) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> g = <span class="number">0</span>; g &lt;= <span class="number">9</span>; ++g)&#123;</span><br><span class="line"><span class="keyword">if</span>(g == a || g == b || g == c || g == d || g == e || g == f) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> h = <span class="number">0</span>; h &lt;= <span class="number">9</span>; ++h)&#123;</span><br><span class="line"><span class="keyword">if</span>(h == a || h == b || h == c || h == d || h == e || h == f || h == g) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(i == a || i == b || i == c || i == d || i == e || i == f || i == g || i == h) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">9</span>; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(j == a || j == b || j == c || j == d || j == e || j == f || j == g || j == h || j == i) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(Math.abs(a-b) != <span class="number">1</span> &amp;&amp; Math.abs(a-e) != <span class="number">1</span> &amp;&amp; Math.abs(a-d) != <span class="number">1</span> &amp;&amp; Math.abs(a-f) != <span class="number">1</span> &amp;&amp;</span><br><span class="line">Math.abs(b-c) != <span class="number">1</span> &amp;&amp; Math.abs(f-b) != <span class="number">1</span> &amp;&amp; Math.abs(e-b) != <span class="number">1</span> &amp;&amp; Math.abs(g-b) != <span class="number">1</span> &amp;&amp;</span><br><span class="line">Math.abs(f-c) != <span class="number">1</span> &amp;&amp; Math.abs(g-c) != <span class="number">1</span> &amp;&amp; </span><br><span class="line">Math.abs(d-e) != <span class="number">1</span> &amp;&amp; Math.abs(d-i) != <span class="number">1</span> &amp;&amp; Math.abs(d-h) != <span class="number">1</span> &amp;&amp; </span><br><span class="line">Math.abs(e-f) != <span class="number">1</span> &amp;&amp; Math.abs(e-j) != <span class="number">1</span> &amp;&amp; Math.abs(e-i) != <span class="number">1</span> &amp;&amp; Math.abs(e-h) != <span class="number">1</span> &amp;&amp; </span><br><span class="line">Math.abs(f-g) != <span class="number">1</span> &amp;&amp; Math.abs(f-j) != <span class="number">1</span> &amp;&amp; Math.abs(f-i) != <span class="number">1</span> &amp;&amp; </span><br><span class="line">Math.abs(g-j) != <span class="number">1</span> &amp;&amp; </span><br><span class="line">Math.abs(h-i) != <span class="number">1</span> &amp;&amp; Math.abs(i-j) != <span class="number">1</span>)&#123;</span><br><span class="line">count++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(count);<span class="comment">//1580</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="剪邮票-（未解决）"><a href="#剪邮票-（未解决）" class="headerlink" title="剪邮票 （未解决）"></a>剪邮票 （未解决）</h2><blockquote><p>剪邮票<br>如图, 有12张连在一起的12生肖的邮票。<br><img src="/2019/03/21/蓝桥杯备考-第七届JavaB组省赛题解/图1.jpg" alt="图1"><br>现在你要从中剪下5张来，要求必须是连着的。<br>（仅仅连接一个角不算相连）<br>比如，图2、图3中，粉红色所示部分就是合格的剪取。<br>请你计算，一共有多少种不同的剪取方法。<br><img src="/2019/03/21/蓝桥杯备考-第七届JavaB组省赛题解/图2.jpg" alt="图2"><br><img src="/2019/03/21/蓝桥杯备考-第七届JavaB组省赛题解/图3.jpg" alt="图3">  </p></blockquote><blockquote><p>请填写表示方案数目的整数。<br>注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p></blockquote><pre><code>思路：暴力想了好久，本来是想着，先选五个数出来，在通过数字之间的关系判断两两是否相连，但总会有这样那样的问题（很容易变成五个都相连或者每个数都有相连的但连不到一块如{1,2,8,11,12}  这道题应该是使用深度遍历，先放一放</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误代码</span></span><br><span class="line"><span class="keyword">package</span> season7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Seven_cutStamp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO 自动生成的方法存根</span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a = <span class="number">1</span>; a &lt;= <span class="number">12</span>; ++a)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b = <span class="number">1</span>; b &lt;= <span class="number">12</span>; ++b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b == a) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">1</span>; c &lt;= <span class="number">12</span>; ++c)&#123;</span><br><span class="line"><span class="keyword">if</span>(c == a || c == b) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> d = <span class="number">1</span>; d &lt;= <span class="number">12</span>; ++d)&#123;</span><br><span class="line"><span class="keyword">if</span>(d == a || d == b || d == c) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> e = <span class="number">1</span>; e &lt;= <span class="number">12</span>; ++e)&#123;</span><br><span class="line"><span class="keyword">if</span>(e == a || e == b || e == c || e == d) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(attach(a, b, c, d, e))&#123;</span><br><span class="line">System.out.println(a +<span class="string">" "</span> + b +<span class="string">" "</span> + c +<span class="string">" "</span> + d +<span class="string">" "</span> + e);</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(count);<span class="comment">//12480</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">attach</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d, <span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] id = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">id[<span class="number">0</span>] = a;</span><br><span class="line">id[<span class="number">1</span>] = b;</span><br><span class="line">id[<span class="number">2</span>] = c; </span><br><span class="line">id[<span class="number">3</span>] = d;</span><br><span class="line">id[<span class="number">4</span>] = e;</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">boolean</span> tempFlag = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>((Math.abs(id[i]-id[j]) == <span class="number">1</span> </span><br><span class="line">&amp;&amp; ((id[i] != <span class="number">4</span> &amp;&amp; id[j] != <span class="number">5</span>) </span><br><span class="line">&amp;&amp; (id[i] != <span class="number">8</span> &amp;&amp; id[j] != <span class="number">9</span>) </span><br><span class="line">&amp;&amp; (id[i] != <span class="number">5</span> &amp;&amp; id[j] != <span class="number">4</span>) </span><br><span class="line">&amp;&amp; (id[i] != <span class="number">9</span> &amp;&amp; id[j] != <span class="number">8</span>)) ) || id[i]+<span class="number">4</span> == id[j] || id[i]-<span class="number">4</span> == id[j])&#123;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">tempFlag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tempFlag == <span class="keyword">false</span>)&#123;</span><br><span class="line">flag = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四平方和"><a href="#四平方和" class="headerlink" title="四平方和"></a>四平方和</h2><blockquote><p>四平方和<br>四平方和定理，又称为拉格朗日定理：<br>每个正整数都可以表示为至多4个正整数的平方和。<br>如果把0包括进去，就正好可以表示为4个数的平方和。<br>比如：<br>5 = 0^2 + 0^2 + 1^2 + 2^2<br>7 = 1^2 + 1^2 + 1^2 + 2^2<br>（^符号表示乘方的意思）  </p></blockquote><blockquote><p>对于一个给定的正整数，可能存在多种平方和的表示法。<br>要求你对4个数排序：<br>0 &lt;= a &lt;= b &lt;= c &lt;= d<br>并对所有的可能表示法按 a,b,c,d 为联合主键升序排列，最后输出第一个表示法  </p></blockquote><blockquote><p>程序输入为一个正整数N (N&lt;5000000)<br>要求输出4个非负整数，按从小到大排序，中间用空格分开<br>例如，输入：<br>5<br>则程序应该输出：<br>0 0 1 2<br>再例如，输入：<br>12<br>则程序应该输出：<br>0 2 2 2<br>再例如，输入：<br>773535<br>则程序应该输出：<br>1 1 267 838  </p></blockquote><blockquote><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 3000ms<br>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。<br>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。</p></blockquote><pre><code>思路：    我的问题：我怎么会从后往前循环各位数寻找（可能因为想着每次砍一平方会快一点？？我这个脑子就不会理性的思考问题吗），问题在于，本题要求输出联合主键最小的，从后往前找就要对各个数进行判断，谁知道我跟这个判断死磕了多久，而且发现需要循环到内层时，肯定会超时（比如773535）正常人的脑子：对五个数暴力循环（从0开始），一找到就return，因为是正向循环，第一个找到的肯定是最小的</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我不太正常的脑子，这个代码看着真的很难受</span></span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> N = scanner.nextInt();</span><br><span class="line">scanner.close();</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a = Integer.MAX_VALUE, b = Integer.MAX_VALUE, c = Integer.MAX_VALUE, d = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">5</span>;      <span class="comment">//减少循环次数</span></span><br><span class="line"><span class="keyword">for</span>(i = (<span class="keyword">int</span>) Math.sqrt(N); i &gt;= <span class="number">1</span>; --i)&#123;</span><br><span class="line">    <span class="keyword">int</span> n1 = N-i*i;</span><br><span class="line">    <span class="keyword">if</span>(n1 == <span class="number">0</span>)&#123;</span><br><span class="line">        count = <span class="number">1</span>;</span><br><span class="line">        d = i;</span><br><span class="line">        a = <span class="number">0</span>;b = <span class="number">0</span>;c = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(count &gt;= <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span>(j = (<span class="keyword">int</span>) Math.sqrt(n1); j &gt;= <span class="number">1</span>; --j)&#123;</span><br><span class="line">        <span class="keyword">int</span> n2 = n1-j*j;</span><br><span class="line">        <span class="keyword">if</span>(n2 == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a&gt;<span class="number">0</span> || b&gt;<span class="number">0</span> || (a==<span class="number">0</span> &amp;&amp; b==<span class="number">0</span> &amp;&amp; j&lt;c) || (a==<span class="number">0</span> &amp;&amp; b==<span class="number">0</span> &amp;&amp; j&lt;=c &amp;&amp; i&lt;d))&#123;</span><br><span class="line">                d = i;</span><br><span class="line">                c = j;</span><br><span class="line">                a = <span class="number">0</span>;b = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(count &gt;= <span class="number">3</span>)</span><br><span class="line">        <span class="keyword">for</span>(k = (<span class="keyword">int</span>) Math.sqrt(n2); k &gt;= <span class="number">1</span>; --k)&#123;</span><br><span class="line">            <span class="keyword">int</span> n3 = n2 - k*k;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(n3 == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a&gt;<span class="number">0</span> || (a==<span class="number">0</span> &amp;&amp; k&lt;b) || (a==<span class="number">0</span> &amp;&amp; k&lt;=b &amp;&amp; j&lt;c) || (a==<span class="number">0</span> &amp;&amp; k&lt;=b &amp;&amp; j&lt;=c&amp;&amp; i&lt;d))&#123;</span><br><span class="line">                    d = i;</span><br><span class="line">                    c = j;</span><br><span class="line">                    b = k;</span><br><span class="line">                    a = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(count &gt;= <span class="number">4</span>)</span><br><span class="line">            <span class="keyword">for</span>(l = (<span class="keyword">int</span>) Math.sqrt(n3); l &gt;= <span class="number">1</span>; --l)&#123;</span><br><span class="line">                <span class="keyword">int</span> n4 = n3 - l*l;</span><br><span class="line">                <span class="keyword">if</span>(n4 == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(l&lt;a || (l&lt;=a &amp;&amp; k&lt;b) || (l&lt;=a &amp;&amp; k&lt;=b &amp;&amp; j&lt;c) || (l&lt;=a &amp;&amp; k&lt;=b &amp;&amp; j&lt;=c&amp;&amp; i&lt;d))&#123;</span><br><span class="line">                        d = i;</span><br><span class="line">                        c = j;</span><br><span class="line">                        b = k;</span><br><span class="line">                        a = l;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(a +<span class="string">" "</span>+ b +<span class="string">" "</span>+ c +<span class="string">" "</span>+ d);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//正常人脑子想的</span></span><br><span class="line"><span class="keyword">int</span> s = (<span class="keyword">new</span> Scanner(System.in)).nextInt();</span><br><span class="line"><span class="keyword">int</span> a,b,c,d;</span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;=Math.sqrt(s);a++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(b=a;b&lt;=Math.sqrt(s);b++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(c=b;c&lt;=Math.sqrt(s);c++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(d=c;d&lt;=Math.sqrt(s);d++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(s == (Math.pow(a, <span class="number">2</span>) + Math.pow(b, <span class="number">2</span>) + Math.pow(c, <span class="number">2</span>) + Math.pow(d, <span class="number">2</span>)))&#123;</span><br><span class="line">                    System.out.println(a+<span class="string">" "</span>+b+<span class="string">" "</span>+c+<span class="string">" "</span>+d);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="取球博弈-（未解决）"><a href="#取球博弈-（未解决）" class="headerlink" title="取球博弈 （未解决）"></a>取球博弈 （未解决）</h2><blockquote><p>取球博弈<br>两个人玩取球的游戏。<br>一共有N个球，每人轮流取球，每次可取集合{n1,n2,n3}中的任何一个数目。<br>如果无法继续取球，则游戏结束。<br>此时，持有奇数个球的一方获胜。<br>如果两人都是奇数，则为平局。<br>假设双方都采用最聪明的取法，<br>第一个取球的人一定能赢吗？<br>试编程解决这个问题。<br>输入格式：<br>第一行3个正整数n1 n2 n3，空格分开，表示每次可取的数目 (0&lt;n1,n2,n3&lt;100)<br>第二行5个正整数x1 x2 … x5，空格分开，表示5局的初始球数(0&lt;xi&lt;1000)<br>输出格式：<br>一行5个字符，空格分开。分别表示每局先取球的人能否获胜。<br>能获胜则输出+，<br>次之，如有办法逼平对手，输出0，<br>无论如何都会输，则输出-<br>例如，输入：<br>1 2 3<br>1 2 3 4 5<br>程序应该输出：  </p><ul><li>0 + 0 -<br>再例如，输入：<br>1 4 5<br>10 11 12 13 15<br>程序应该输出：<br>0 - 0 + +<br>再例如，输入：<br>2 3 5<br>7 8 9 10 11<br>程序应该输出：  </li><li>0 0 0 0  </li></ul></blockquote><blockquote><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 3000ms<br>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。<br>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。  </p></blockquote><h2 id="压缩变换-（未解决）"><a href="#压缩变换-（未解决）" class="headerlink" title="压缩变换 （未解决）"></a>压缩变换 （未解决）</h2><blockquote><p>压缩变换<br>小明最近在研究压缩算法。<br>他知道，压缩的时候如果能够使得数值很小，就能通过熵编码得到较高的压缩比。<br>然而，要使数值很小是一个挑战。<br>最近，小明需要压缩一些正整数的序列，这些序列的特点是，后面出现的数字很大可能是刚出现过不久的数字。对于这种特殊的序列，小明准备对序列做一个变换来减小数字的值。<br>变换的过程如下：<br>从左到右枚举序列，每枚举到一个数字，如果这个数字没有出现过，刚将数字变换成它的相反数，如果数字出现过，则看它在原序列中最后的一次出现后面（且在当前数前面）出现了几种数字，用这个种类数替换原来的数字。<br>比如，序列(a1, a2, a3, a4, a5)=(1, 2, 2, 1, 2)在变换过程为：<br>a1: 1未出现过，所以a1变为-1；<br>a2: 2未出现过，所以a2变为-2；<br>a3: 2出现过，最后一次为原序列的a2，在a2后、a3前有0种数字，所以a3变为0；<br>a4: 1出现过，最后一次为原序列的a1，在a1后、a4前有1种数字，所以a4变为1；<br>a5: 2出现过，最后一次为原序列的a3，在a3后、a5前有1种数字，所以a5变为1。<br>现在，给出原序列，请问，按这种变换规则变换后的序列是什么。<br>输入格式：<br>输入第一行包含一个整数n，表示序列的长度。<br>第二行包含n个正整数，表示输入序列。<br>输出格式：<br>输出一行，包含n个数，表示变换后的序列。  </p></blockquote><blockquote><p>例如，输入：<br>5<br>1 2 2 1 2<br>程序应该输出：<br>-1 -2 0 1 1<br>再例如，输入：<br>12<br>1 1 2 3 2 3 1 2 2 2 3 1<br>程序应该输出：<br>-1 0 -2 -3 1 1 2 2 0 0 2 2<br>数据规模与约定<br>对于30%的数据，n&lt;=1000；<br>对于50%的数据，n&lt;=30000；<br>对于100%的数据，1 &lt;=n&lt;=100000，1&lt;=ai&lt;=10^9  </p></blockquote><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 3000ms</p><p>请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。</p><p>所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。<br>注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。<br>注意：主类的名字必须是：Main，否则按无效代码处理。</p>]]></content>
    
    <summary type="html">
    
      非常暴力
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>钢条切割问题</title>
    <link href="http://Chacha-Z.github.io/2019/03/11/%E9%92%A2%E6%9D%A1%E5%88%87%E5%89%B2%E9%97%AE%E9%A2%98/"/>
    <id>http://Chacha-Z.github.io/2019/03/11/钢条切割问题/</id>
    <published>2019-03-11T07:07:42.000Z</published>
    <updated>2019-03-11T07:32:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><pre><code>+ 给定一段长度为n英寸的钢条和一个价格表pi(i=1,2,…n)，求切割钢条方案，使得销售收益rn最大。注意，如果长度为n英寸的钢条的价格pn足够大，最优解可能就是完全不需要切割。+ 例： {1, 5, 8, 9, 10, 17, 17, 20, 24, 30}, 当n=4时，收益最大为10</code></pre><ol><li><h4 id="Recursion"><a href="#Recursion" class="headerlink" title="Recursion"></a>Recursion</h4> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cut</span><span class="params">(<span class="keyword">int</span>[] p, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">int</span> maxP = Integer.MIN_VALUE;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">       maxP = Math.max(maxP, p[i-<span class="number">1</span>] + cut(p, n-i));</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">return</span> maxP;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="top-down"><a href="#top-down" class="headerlink" title="top - down"></a>top - down</h4> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cutBars</span><span class="params">(<span class="keyword">int</span>[] p, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];<span class="comment">//+1 使用下标代表对应长度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp.length; ++i)&#123;</span><br><span class="line">temp[i] = -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> cut(p, n, temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cut</span><span class="params">(<span class="keyword">int</span>[] p, <span class="keyword">int</span> n, <span class="keyword">int</span>[] temp)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(temp[n] != -<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> temp[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxP = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">maxP = Math.max(maxP, p[i-<span class="number">1</span>]+cut(p, n-i, temp));</span><br><span class="line">&#125;</span><br><span class="line">temp[n] = maxP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> maxP;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="DP"><a href="#DP" class="headerlink" title="DP"></a>DP</h4> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cut</span><span class="params">(<span class="keyword">int</span>[] p, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] r = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;    <span class="comment">//控制计算r[i]</span></span><br><span class="line"><span class="keyword">int</span> maxP = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; ++j)&#123;    <span class="comment">//计算当前长度的最大收益</span></span><br><span class="line">maxP = Math.max(maxP, p[j-<span class="number">1</span>] + r[i-j]);</span><br><span class="line">&#125;</span><br><span class="line">r[i] = maxP;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> r[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      由递归到动态规划
    
    </summary>
    
    
      <category term="算法" scheme="http://Chacha-Z.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="DynamicProblem" scheme="http://Chacha-Z.github.io/tags/DynamicProblem/"/>
    
      <category term="Recursion" scheme="http://Chacha-Z.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>Fibonacci问题</title>
    <link href="http://Chacha-Z.github.io/2019/03/11/Fibonacci%E9%97%AE%E9%A2%98/"/>
    <id>http://Chacha-Z.github.io/2019/03/11/Fibonacci问题/</id>
    <published>2019-03-11T06:44:27.000Z</published>
    <updated>2019-03-11T07:06:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="由Fibonacci体会动态规划"><a href="#由Fibonacci体会动态规划" class="headerlink" title="由Fibonacci体会动态规划"></a>由Fibonacci体会动态规划</h3><ol><li><h4 id="Recursion"><a href="#Recursion" class="headerlink" title="Recursion"></a>Recursion</h4> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(n == <span class="number">1</span> || n == <span class="number">2</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">return</span> fib(n-<span class="number">1</span>) + fib(n-<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="top-down"><a href="#top-down" class="headerlink" title="top - down"></a>top - down</h4><ul><li><p>保存递归结果，减少冗余递归</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">//注意递归树</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp.length; ++i)&#123;</span><br><span class="line">temp[i] = -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fib(n, temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] temp)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">1</span> || n == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(temp[n] != -<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> temp[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fib = fib(n-<span class="number">1</span>, temp) + fib(n-<span class="number">2</span>, temp);</span><br><span class="line"></span><br><span class="line">temp[n] = fib;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fib;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="DP"><a href="#DP" class="headerlink" title="DP"></a>DP</h4> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fib1</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">temp[<span class="number">0</span>] = <span class="number">0</span>;<span class="comment">//从第0项算起</span></span><br><span class="line">temp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; temp.length; ++i)&#123;</span><br><span class="line">temp[i] = temp[i-<span class="number">1</span>] + temp[i-<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> temp[n];</span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line">   ```  </span><br><span class="line">   + 可以发现，我们需要的只是第n项的结果，不需要保存之前的值，所以还可以对空间进行优化  </span><br><span class="line"></span><br><span class="line">   ``` java</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fib2</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> temp1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp2 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tempn = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">tempn = temp1 + temp2;</span><br><span class="line">temp1 = temp2;</span><br><span class="line">temp2 = tempn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> tempn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      由Fibonacci体会动态规划
    
    </summary>
    
    
      <category term="算法" scheme="http://Chacha-Z.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="DynamicProblem" scheme="http://Chacha-Z.github.io/tags/DynamicProblem/"/>
    
      <category term="Recursion" scheme="http://Chacha-Z.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>最大连续子列和问题</title>
    <link href="http://Chacha-Z.github.io/2019/03/11/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%88%97%E5%92%8C%E9%97%AE%E9%A2%98/"/>
    <id>http://Chacha-Z.github.io/2019/03/11/最大连续子列和问题/</id>
    <published>2019-03-11T02:04:08.000Z</published>
    <updated>2019-03-11T06:42:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><pre><code>给定一个数列，其中可能有正数也可能有负数，我们的任务是找出其中连续的一个子数列（不允许空序列），使它们的和尽可能大  列：{-2, 6, -1, 5, 4, -7, 2, 3}的最大子序列和为:14</code></pre><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="[问题解决]"></a>[问题解决]</h3><ol><li><h4 id="暴力解法-O-n-3"><a href="#暴力解法-O-n-3" class="headerlink" title="暴力解法 - O(n^3)"></a>暴力解法 - O(n^3)</h4><ul><li><p>确定求和起始位置和结束位置，对每一个起始位置到每一个结束位置结束求子列和，取最大</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="keyword">int</span> maxSum = <span class="number">0</span>, tempSum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; a.length; ++i)&#123;  <span class="comment">//确定起始位置</span></span><br><span class="line">    <span class="keyword">for</span>(j = i; j &lt; a.length; ++j)&#123;  <span class="comment">//确定结束位置</span></span><br><span class="line">        tempSum = <span class="number">0</span>;    <span class="comment">//当前和</span></span><br><span class="line">        <span class="keyword">for</span>(k = i; k &lt;= j; ++k)&#123;    <span class="comment">//求和</span></span><br><span class="line">            tempSum += a[k];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(tempSum &gt; maxSum)&#123;</span><br><span class="line">            maxSum = tempSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="升级版暴力解法-O-n-2"><a href="#升级版暴力解法-O-n-2" class="headerlink" title="升级版暴力解法 - O(n^2)"></a>升级版暴力解法 - O(n^2)</h4><ul><li>对于O(n^3)解法，我们可以知道，对于同一个起始位置，不同的结束为止的子列和可以在前一个结束为止上往后加，即内层循环没有必要</li><li><p>分而治之的思想：将数列从中间不断二分，分 - 处理最小单位最大子列和，治 - 得到各个单位左边最大子列/右边最大子列/以及计算跨越分割中线的最大子列和，比较得到最大子列和</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> tempSum = <span class="number">0</span>, maxSum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; ++i)&#123;  <span class="comment">//确定起始位置</span></span><br><span class="line">    tempSum = <span class="number">0</span>;    <span class="comment">//当前起始位置和</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; a.length; ++j)&#123;  <span class="comment">//确定结束为止</span></span><br><span class="line">        tempSum += a[j];</span><br><span class="line">        <span class="keyword">if</span>(tempSum &gt; maxSum)&#123;</span><br><span class="line">            maxSum = tempSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="分而治之-O-nlogn"><a href="#分而治之-O-nlogn" class="headerlink" title="分而治之 - O(nlogn)"></a>分而治之 - O(nlogn)</h4><ul><li><p>看到O(n^2)的复杂度，就想能不能降成O(nlogn)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a&gt;b ? ((a&gt;c)?a:c) : ((b&gt;c)?b:c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">DivideAndConquer</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (left + right)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(left == right)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[left] &gt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> a[left];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxLeftSum, maxRightSum;</span><br><span class="line">maxLeftSum = DivideAndConquer(a, left, mid);<span class="comment">//左边最大</span></span><br><span class="line">maxRightSum = DivideAndConquer(a, mid+<span class="number">1</span>, right);<span class="comment">//右边最大</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 处理跨越边界的最大 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">int</span> tempLeftBoardSum = <span class="number">0</span>, maxLeftBoardSum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = mid; i &gt;= left; --i)&#123;<span class="comment">//对比在线处理，为什么少了当小于0时清0的那一步</span></span><br><span class="line">tempLeftBoardSum += a[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(tempLeftBoardSum &gt; maxLeftBoardSum)&#123;</span><br><span class="line">maxLeftBoardSum = tempLeftBoardSum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tempRightBoardSum = <span class="number">0</span>, maxRightBoardSum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = mid+<span class="number">1</span>; j &lt; right; ++j)&#123;</span><br><span class="line">tempRightBoardSum += a[j];</span><br><span class="line"><span class="keyword">if</span>(tempRightBoardSum &gt; maxRightBoardSum)&#123;</span><br><span class="line">maxRightBoardSum = tempRightBoardSum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> max(maxLeftSum, maxRightSum, maxLeftBoardSum+maxRightBoardSum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="DP动态规划-在线处理-O-n"><a href="#DP动态规划-在线处理-O-n" class="headerlink" title="DP动态规划 - 在线处理 - O(n)"></a>DP动态规划 - 在线处理 - O(n)</h4><ul><li>为什么当前和小于0要归零：因为当前和小于0了，在往后加时前面的小于0的和一定是拖后腿的，所以舍弃；maxSum始终保存了前面某一段的最大值，所以不会丢失数据。</li><li><p>例 ： {-2, 6, -1, 5, 4, -7, 2, 3}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> thisSum = <span class="number">0</span>, maxSum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; ++i)&#123;</span><br><span class="line">    thisSum += a[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(thisSum &gt; maxSum)&#123;</span><br><span class="line">        maxSum = thisSum;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(thisSum &lt; <span class="number">0</span> )&#123;<span class="comment">//为什么当小于0时要归0</span></span><br><span class="line">        thisSum = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      动态规划与分而治之
    
    </summary>
    
    
      <category term="算法" scheme="http://Chacha-Z.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="DynamicProblem" scheme="http://Chacha-Z.github.io/tags/DynamicProblem/"/>
    
      <category term="Divide&amp;Conquer" scheme="http://Chacha-Z.github.io/tags/Divide-Conquer/"/>
    
  </entry>
  
  <entry>
    <title>DP问题</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/DP%E9%97%AE%E9%A2%98/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/DP问题/</id>
    <published>2019-03-10T07:29:52.000Z</published>
    <updated>2019-03-11T13:22:28.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>重要特性： 无后效性</li><li>多阶决策问题</li></ul>]]></content>
    
    <summary type="html">
    
      动态规划问题总结
    
    </summary>
    
    
      <category term="算法" scheme="http://Chacha-Z.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="DynamicProblem" scheme="http://Chacha-Z.github.io/tags/DynamicProblem/"/>
    
  </entry>
  
  <entry>
    <title>LIS问题</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/LIS%E9%97%AE%E9%A2%98/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/LIS问题/</id>
    <published>2019-03-10T07:27:35.000Z</published>
    <updated>2019-03-11T02:02:46.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="LIS问题"><a href="#LIS问题" class="headerlink" title="LIS问题"></a>LIS问题</h3><pre><code>有一个长为n的数列a0, a1, ......, a(n-1)。请求出这个序列中最长的上升子序列的长度。上升子序列指的是对于任意的i&lt; j都满足ai &lt; aj的子序列</code></pre><h4 id="例"><a href="#例" class="headerlink" title="例"></a>例</h4><pre><code>序列为（1，5 ，2，6，9，10，3，15），那么它的最长上升子序列为：（1，2，6，9，10，15）</code></pre><h3 id="O-N-2"><a href="#O-N-2" class="headerlink" title="O(N^2)"></a>O(N^2)</h3><h4 id="思路：DP"><a href="#思路：DP" class="headerlink" title="思路：DP"></a>思路：DP</h4><pre><code>dp[i] = max(1, dp[j]+1) 其中：i &gt; j &amp;&amp; ai &gt; aj</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lis</span><span class="params">(<span class="keyword">int</span>[] a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line">    <span class="keyword">int</span>[] maxSub = <span class="keyword">new</span> <span class="keyword">int</span>[a.length];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;  i&lt; a.length; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> curMaxSub = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] &gt; a[j] &amp;&amp; curMaxSub &lt; maxSub[j]+<span class="number">1</span>)&#123;</span><br><span class="line">                curMaxSub = maxSub[j]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maxSub[i] = curMaxSub;</span><br><span class="line">        <span class="keyword">if</span>(maxSub[i] &gt; max)&#123;</span><br><span class="line">            max = maxSub[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="O-nlogn"><a href="#O-nlogn" class="headerlink" title="O(nlogn)"></a>O(nlogn)</h3><h4 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h4><ul><li>标记路径；</li><li>贪心算法：使序列整体尽可能的小，以便加入更多的元素;<br>  实现方式：维护一个标志路径数组，遍历原数组。如果当前元素大于标志数组中的最后一个，则加入标志数组后面；否则使用当前元素替换标志数组中，第一个大于当前元素的元素;<br>  例如：{5, 3, 1, 2, 4, 7, 8, 6}的标志路径为{1, 2， 4， 6， 8}；但这<strong>并不一定等于最长上升子序列</strong>，实际的最长上升子序列应该是{1, 2, 4, 7, 8}, 该贪心算法仅仅是所求的的长度相同（为什么长度就一定相同？）</li><li>BUT：得到的序列是一个伪序列，里面的元素，并不是真正的最长上升子序列，而仅仅和最长上升子序列的个数一样。</li><li>时间复杂度：因为查找的时候用的二分查找，所以时间复杂度为o（nlogn）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getLis</span><span class="params">(<span class="keyword">int</span>[] a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[a.length];</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    dp[len++] = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; a.length; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] &gt; dp[len-<span class="number">1</span>])&#123;</span><br><span class="line">            dp[len++] = a[i];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> replaceIndex = getIndex(dp, len, a[i]);</span><br><span class="line">            dp[replaceIndex] = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Arrays.toString(dp));</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getIndex</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> n, <span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> high = n-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (low + high)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(low &lt; high)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[mid] &gt; x)&#123;</span><br><span class="line">            high = mid-<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[mid] &lt; x)&#123;</span><br><span class="line">            low = mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mid = (low + high)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> low;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      动态规划；O(n^2)和O(nlogn)
    
    </summary>
    
    
      <category term="算法" scheme="http://Chacha-Z.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="DynamicProblem" scheme="http://Chacha-Z.github.io/tags/DynamicProblem/"/>
    
      <category term="GreedyAlgorithm" scheme="http://Chacha-Z.github.io/tags/GreedyAlgorithm/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-WEEK6_PassBridge</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-WEEK6-PassBridge/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/蓝桥杯备考-WEEK6-PassBridge/</id>
    <published>2019-03-10T05:56:41.000Z</published>
    <updated>2019-03-23T10:55:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><p>A group of n people wish to cross a bridge at night.</p><p>n个人的队伍想在晚上通过一座大桥。</p><p>At most two people may cross at any time, and each group must have a flashlight.</p><p>任何时间最多有2人通过，每组必须有一个手电筒。</p><p>Only one flashlight is available among the n people, so some sort of shuttle arrangement must be arranged in order to return the flashlight so that more people may cross.</p><p>很可怜，这n个人只有一个手电筒可用，因此必须合理地安排，让手电筒能回到另一端，这样才能让更多人通过大桥。</p><p>Each person has a different crossing speed; the speed of a group is determined by the speed of the slower member.</p><p>每个人有不同的速度，编组后，一个组的速度等于慢的那个人的速度。</p><p>Your job is to determine a strategy that gets all n people across the bridge in the minimum time.</p><p>你的任务是实现一种策略，让所有人在最短时间内通过。</p><h4 id="输入"><a href="#输入" class="headerlink" title="[输入]"></a>[输入]</h4><p>The input begins with a single positive integer on a line by itself indicating the number of test cases, followed by a blank line. There is also a blank line between each two consecutive inputs.</p><p>第一行是一个单独的数字，代表测试案例的个数；随后是一个空行。后面每两个输入之间都有一个空行。</p><p>The first line of each case contains n, followed by n lines giving the crossing times for each of the people. There are not more than 1,000 people and nobody takes more than 100 seconds to cross the bridge.</p><p>每个测试案例的第一行是n的值，随后n行是每个人单独通过大桥的时间。人数≤1000，时间≤100s</p><h4 id="输出"><a href="#输出" class="headerlink" title="[输出]"></a>[输出]</h4><p>For each test case, the first line of output must report the total number of seconds required for all n people to cross the bridge.</p><p>对每个案例，首行是n个人通过的时间。</p><p>Subsequent lines give a strategy for achieving this time. Each line contains either one or two integers, indicating which person or people form the next group to cross.</p><p>随后是你的通过和返回次序，每一行是一个或者两个整数，对应着人（通过时间代表人）。返回也要占一行。</p><p>Each person is indicated by the crossing time specified in the input.Although many people may have the same crossing time, this ambiguity is of no consequence.</p><p>虽然不同的人可能有相同的速度，但这没有影响（看做一种人就好了）。</p><p>Note that the crossings alternate directions, as it is necessary to return the flashlight so that more may cross.</p><p>注意方向，意思就是说返回情况也要占一行。</p><p>If more than one strategy yields the minimal time, any one will do.</p><p>多种方案都是最短时间的，任选其一皆可。</p><p>The output of two consecutive cases must be separated by a blank line.</p><p>案例之间空行分界。</p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="[问题解决]"></a>[问题解决]</h3><ol><li><p>思路</p><ol><li><p>以四个人为基础，A/B/Y/Z，设他们的速度分别为{1, 2, 5, 10}</p><ol><li><p>方案一：<br> 最快的A永远做回来那个人，即最快的一个人送回电筒</p><blockquote><p>A B (B)  </p><pre><code>B (B)   </code></pre><p> Y Z (Z)  </p><pre><code>A (A)  </code></pre><p> A B (B) </p></blockquote><p> 一共：3*B+A+Z 秒</p></li><li><p>方案二：<br> A/B先去到对面，即最快的两个人送回电筒</p><blockquote><p>A Z (Z)  </p><pre><code>A (A)   </code></pre><p> A Y (Y)  </p><pre><code>A (A)  </code></pre><p> A B (B)  </p></blockquote><p> 一共：B+2*A+Y+Z 秒  </p><p><strong>所以最后就变成比较（2B）和（A+Y）的大小</strong></p></li></ol></li><li><p>推广到n个人<br>DP问题：即每次处理最慢的两个人，每次处理就少两个人,每次计算以把最慢两个人送过去为单位（AB已经回来再和这头，继续下一趟）（然而其实每次按公式算一样的？？？）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deal</span><span class="params">(<span class="keyword">int</span>[] p)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">Arrays.sort(p);   <span class="comment">//按从小到大排序</span></span><br><span class="line"><span class="keyword">int</span> minTime = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = p.length-<span class="number">1</span>; i &gt;= <span class="number">3</span>; i -= <span class="number">2</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//minTime += ((p[0]+p[i-1]) &lt; 2*p[1])?(p[i]+p[i-1]+2*p[0]):(2*p[1]+p[i]+p[0]);</span></span><br><span class="line"><span class="keyword">if</span>(p[<span class="number">0</span>]+p[i-<span class="number">1</span>] &lt; <span class="number">2</span>*p[<span class="number">1</span>])&#123;</span><br><span class="line">minTime += p[i]+p[i-<span class="number">1</span>]+<span class="number">2</span>*p[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">System.out.println(p[<span class="number">0</span>] + <span class="string">" "</span> + p[i] + <span class="string">":"</span> + p[i] + <span class="string">"秒"</span>);</span><br><span class="line">System.out.println(p[<span class="number">0</span>] + <span class="string">":"</span> + p[<span class="number">0</span>] + <span class="string">"秒"</span>);</span><br><span class="line">System.out.println(p[<span class="number">0</span>] + <span class="string">" "</span> + p[i-<span class="number">1</span>] + <span class="string">":"</span> + p[i-<span class="number">1</span>] + <span class="string">"秒"</span>);</span><br><span class="line">System.out.println(p[<span class="number">0</span>] + <span class="string">":"</span> + p[<span class="number">0</span>] + <span class="string">"秒"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">minTime += <span class="number">2</span>*p[<span class="number">1</span>]+p[i]+p[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">System.out.println(p[<span class="number">0</span>] + <span class="string">" "</span> + p[<span class="number">1</span>] + <span class="string">":"</span> + p[<span class="number">1</span>] + <span class="string">"秒"</span>);</span><br><span class="line">System.out.println(p[<span class="number">1</span>] + <span class="string">":"</span> + p[<span class="number">1</span>] + <span class="string">"秒"</span>);</span><br><span class="line">System.out.println(p[i-<span class="number">1</span>] + <span class="string">" "</span> + p[i] + <span class="string">":"</span> + p[i] + <span class="string">"秒"</span>);</span><br><span class="line">System.out.println(p[<span class="number">0</span>] + <span class="string">":"</span> + p[<span class="number">0</span>] + <span class="string">"秒"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(p[<span class="number">0</span>] + <span class="string">" "</span> + p[<span class="number">1</span>] + <span class="string">":"</span> + p[<span class="number">1</span>] + <span class="string">"秒"</span>);</span><br><span class="line">minTime += p[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">System.out.println(minTime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      理清两种情况的来由（以四个人为基础）
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="DynamicProblem" scheme="http://Chacha-Z.github.io/tags/DynamicProblem/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-WEEK5_pancakesSort</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-WEEK5-pancakesSort/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/蓝桥杯备考-WEEK5-pancakesSort/</id>
    <published>2019-03-10T04:58:28.000Z</published>
    <updated>2019-03-23T10:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关键："><a href="#关键：" class="headerlink" title="关键："></a>关键：</h3><pre><code>思路：找最大的，把最大的翻到最前面，再整个倒转将最大的翻到最后技巧：如果最大的已经在对应的最后面则不用翻转；如果最大的在第一个也可以省去第一步翻转</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pancakesSort</span><span class="params">(<span class="keyword">int</span>[] p)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; p.length; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> max_i = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p.length-i; ++j)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(p[j] &gt; p[max_i])&#123;</span><br><span class="line">                max_i = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(max_i != p.length-i-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(max_i != <span class="number">0</span>)&#123;</span><br><span class="line">                convertArr(p, <span class="number">0</span>, max_i);</span><br><span class="line">                System.out.println(Arrays.toString(p));</span><br><span class="line">            &#125;</span><br><span class="line">            convertArr(p, <span class="number">0</span>, p.length-<span class="number">1</span>-i);</span><br><span class="line">            System.out.println(Arrays.toString(p));</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">convertArr</span><span class="params">(<span class="keyword">int</span>[] p, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">0</span> || m &lt; <span class="number">0</span> || n &gt; p.length || m &gt; p.length || m &lt;= n)&#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n &lt; m)&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = p[n];</span><br><span class="line">        p[n] = p[m];</span><br><span class="line">        p[m] = temp;</span><br><span class="line">        n++;</span><br><span class="line">        m--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      这么简单为什么想不到呢！思路理清代码很简单；主要思路就是：找最大的，把最大的翻到最前面，再整个倒转将最大的翻到最后
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-WEEK4_高斯日记</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-WEEK4-%E9%AB%98%E6%96%AF%E6%97%A5%E8%AE%B0/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/蓝桥杯备考-WEEK4-高斯日记/</id>
    <published>2019-03-10T04:47:52.000Z</published>
    <updated>2019-03-23T10:55:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><p>大数学家高斯有个好习惯：无论如何都要记日记。</p><p>他的日记有个与众不同的地方，他从不注明年月日，而是用一个整数代替，比如：4210</p><p>后来人们知道，那个整数就是日期，它表示那一天是高斯出生后的第几天。这或许也是个好习惯，它时时刻刻提醒着主人：日子又过去一天，还有多少时光可以用于浪费呢？</p><p>高斯出生于：1777年4月30日。</p><p>在高斯发现的一个重要定理的日记上标注着：5343，因此可算出那天是：1791年12月15日。</p><p>高斯获得博士学位的那天日记上标着：8113</p><p>请你算出高斯获得博士学位的年月日。</p><p>提交答案的格式是：yyyy-mm-dd, 例如：1980-03-21</p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><pre><code>利用计算器“日期计算”功能**P.S：由1791年12月15日是第5343天，验证可知，高斯将他出日那天算做了第一天，所以要将结果-1**</code></pre>]]></content>
    
    <summary type="html">
    
      填空题，巧用工具；注意边界（0起还是1起，是否加一）
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-WEEK3_二维数组元素最短距离问题</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-WEEK3-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E9%97%AE%E9%A2%98/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/蓝桥杯备考-WEEK3-二维数组元素最短距离问题/</id>
    <published>2019-03-10T03:27:00.000Z</published>
    <updated>2019-03-23T10:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><p> X星球居民小区的楼房全是一样的，并且按矩阵样式排列。其楼房的编号为1,2,3…</p><p> 当排满一行时，从下一行相邻的楼往反方向排号。</p><p> 比如：当小区排号宽度为6时，开始情形如下：</p><p> 1  2  3  4  5  6</p><p> 12 11 10 9  8  7</p><p> 13 14 15 …..</p><p> 我们的问题是：已知了两个楼号m和n，需要求出它们之间的最短移动距离（不能斜线方向移动）</p><p> 输入为3个整数w m n，空格分开，都在1到10000范围内</p><p> 要求输出一个整数，表示m n 两楼间最短移动距离。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="[样例输入]"></a>[样例输入]</h4><p> 6 8 2</p><h5 id="样例输出"><a href="#样例输出" class="headerlink" title="[样例输出]"></a>[样例输出]</h5><p> 4</p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="[样例输入]"></a>[样例输入]</h4><p> 4 7 20</p><h5 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="[样例输出]"></a>[样例输出]</h5><p> 5</p><p> */</p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] getIndex(<span class="keyword">int</span> w, <span class="keyword">int</span> n)&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n%w == <span class="number">0</span>)&#123;</span><br><span class="line">        i = n/w;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            j = w-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        i = n/w + <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            j = w - n%w;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            j = n%w - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[] result = &#123;i-<span class="number">1</span>, j&#125;;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(Math.abs(index_m[<span class="number">0</span>] - index_n[<span class="number">0</span>]) + Math.abs(index_m[<span class="number">1</span>] - index_n[<span class="number">1</span>]));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      找规律；两个数做减法时，考虑大小；Math.abs(a);
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-WEEK2_Mineweep</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-WEEK2-Mineweep/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/蓝桥杯备考-WEEK2-Mineweep/</id>
    <published>2019-03-10T03:06:13.000Z</published>
    <updated>2019-03-23T10:55:14.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><a id="more"></a><pre><code>Have you ever played Minesweeper? It’s a cute little game which comes within a certain OperatingSystem which name we can’t really remember. Well, the goal of the game is to find where are all the mines within a M × N field. To help you, the game shows a number in a square which tells you how many mines there are adjacent to that square. For instance, supose the following 4 × 4 field with 2 mines (which are represented by an ‘*’ character):*........*......If we would represent the same field placing the hint numbers described above, we would end upwith:*10022101*101110As you may have already noticed, each square may have at most 8 adjacent squares.</code></pre><h4 id="输入"><a href="#输入" class="headerlink" title="[输入]"></a>[输入]</h4><pre><code>The input will consist of an arbitrary number of fields. The first line of each field contains two integersn and m (0 &lt; n, m ≤ 100) which stands for the number of lines and columns of the field respectively.The next n lines contains exactly m characters and represent the field.Each safe square is represented by an ‘.’ character (without the quotes) and each mine squareis represented by an ‘*’ character (also without the quotes). The first field line where n = m = 0represents the end of input and should not be processed.</code></pre><h4 id="输出"><a href="#输出" class="headerlink" title="[输出]"></a>[输出]</h4><pre><code>对于每对整数 i 和 j，按原来的顺序输出 i 和 j，然后输出二者之间的整数中的最大循环节长度。这三个整数应该用单个空格隔开，且在同一行输出。对于读入的每一组数据，在输出中应位于单独的一行。</code></pre><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="[样例输入]"></a>[样例输入]</h4><pre><code>4 4*........*......3 5**.........*...0 0</code></pre><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="[样例输出]"></a>[样例输出]</h4><pre><code>Field #1:*10022101*101110Field #2:**100332001*100*/</code></pre><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><ol><li><p>我的思路<br> 为了不考虑边界问题,并且可以只判断”<em>“（真的是懒的，反而给自己增添了很多麻烦，绕得不行），使用了一个比目标数组大两行两列的整型数组，目的是为了可以刚好框下目标数组；这样可以只对</em>周围的空间进行处理（+1），存储对应计数。<br> BUT！比较绕的地方在于，目标数组[i, j], 对应的是计数数组的[i+1, j+1]</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] decode = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">2</span>][m+<span class="number">2</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(field[i][j] == <span class="string">'*'</span>)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= <span class="number">2</span>; ++k)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span>; l &lt;= <span class="number">2</span>; ++l)&#123;</span><br><span class="line">                    decode[i+k][j+l] += <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(field[i][j] == <span class="string">'*'</span>)&#123;</span><br><span class="line">            System.out.print(<span class="string">'*'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.print(decode[i+<span class="number">1</span>][j+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>遍历数组，逐个处理<br> 对每一个元素，遍历其周围元素，计数有几个”*”, 直接输出<br> 关键：！！IF语句对边界进行判断就OK了！超过了边界不计数就完事儿了！不知道自己在想什么</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(field[i][j] == <span class="string">'*'</span>)&#123;</span><br><span class="line">            System.out.print(<span class="string">'*'</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = i-<span class="number">1</span>; k &lt;= i+<span class="number">1</span>; ++k)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> l = j-<span class="number">1</span>; l &lt;= j+i; ++l)&#123;</span><br><span class="line">                <span class="keyword">if</span>(k &gt;= <span class="number">0</span> &amp;&amp; k &lt; n &amp;&amp; l &gt;= <span class="number">0</span> &amp;&amp; l &lt; m &amp;&amp; field[k][l] == <span class="string">'*'</span>)&#123;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(count);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      边界判断
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-WEEK1_3n+1问题</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-WEEK1-3n-1%E9%97%AE%E9%A2%98/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/蓝桥杯备考-WEEK1-3n-1问题/</id>
    <published>2019-03-10T02:51:03.000Z</published>
    <updated>2019-03-23T10:55:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><p>考虑如下的序列生成算法：从整数 n 开始，如果 n 是偶数，把它除以 2；如果 n 是奇数，把它乘 3 加1。用新得到的值重复上述步骤，直到 n = 1 时停止。例如，n = 22 时该算法生成的序列是：</p><p>22，11，34，17，52，26，13，40，20，10，5，16，8，4，2，1</p><p>人们猜想（没有得到证明）对于任意整数 n，该算法总能终止于 n = 1。这个猜想对于至少 1 000 000内的整数都是正确的。</p><p>对于给定的 n，该序列的元素（包括 1）个数被称为 n 的循环节长度。在上述例子中，22 的循环节长度为 16。输入两个数 i 和 j，你的任务是计算 i 到 j（包含 i 和 j）之间的整数中，循环节长度的最大值。</p><h4 id="输入"><a href="#输入" class="headerlink" title="[输入]"></a>[输入]</h4><p>输入每行包含两个整数 i 和 j。所有整数大于 0，小于 1 000 000。</p><h4 id="输出"><a href="#输出" class="headerlink" title="[输出]"></a>[输出]</h4><p>对于每对整数 i 和 j，按原来的顺序输出 i 和 j，然后输出二者之间的整数中的最大循环节长度。这三个整数应该用单个空格隔开，且在同一行输出。对于读入的每一组数据，在输出中应位于单独的一行。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="[样例输入]"></a>[样例输入]</h4><p>1 10</p><p>100 200</p><p>201 210</p><p>900 1000</p><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="[样例输出]"></a>[样例输出]</h4><p>1 10 20</p><p>100 200 125</p><p>201 210 89</p><p>900 1000 174</p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><pre><code>是挺简单的一道题，但很容易采坑，需要注意的地方在于：</code></pre><ol><li>每行输入i、j的大小不确定，需要判断。（很容易主观认定i &lt; j，然后以此进行循环）</li><li>要求 “按原来的顺序输出 i 和 j”</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">maxCircleSub</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">while</span>(scanner.hasNext())&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = scanner.nextInt(), j = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span> maxSubLen = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> begin = i &lt; j ? i : j;</span><br><span class="line">        <span class="keyword">int</span> end = j &gt; i ? j : i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = begin; k &lt;= end; ++k)&#123;</span><br><span class="line">            <span class="keyword">int</span> n = k;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">int</span> tempLen = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(n != <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(n%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    n = n/<span class="number">2</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    n = <span class="number">3</span>*n +<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                tempLen++;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            maxSubLen = Math.max(maxSubLen, tempLen);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(Integer.toString(i) + <span class="string">' '</span> + Integer.toString(j) + <span class="string">' '</span> + Integer.toString(maxSubLen));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    scanner.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="此题总结"><a href="#此题总结" class="headerlink" title="此题总结"></a>此题总结</h3><pre><code>认清题目要求，避坑</code></pre>]]></content>
    
    <summary type="html">
    
      审题
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯备考-基础练习总结</title>
    <link href="http://Chacha-Z.github.io/2019/03/10/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%80%83-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://Chacha-Z.github.io/2019/03/10/蓝桥杯备考-基础练习总结/</id>
    <published>2019-03-10T00:44:00.000Z</published>
    <updated>2019-03-23T10:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="判断闰年"><a href="#判断闰年" class="headerlink" title="判断闰年"></a>判断闰年</h3><p>  我去，我都不好意思写出来</p><blockquote><p>“能被4整除但不能被100整除为普通闰年，能被400整除为世纪闰年”</p></blockquote><p><code>year%400 == 0 || (year%100 != 0 &amp;&amp; year%4 == 0)</code></p><h3 id="01子串"><a href="#01子串" class="headerlink" title="01子串"></a>01子串</h3><blockquote><p>对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：<br><br>00000<br>00001<br>00010<br>00011<br>00100。<br>请按从小到大的顺序输出这32种01串。</p></blockquote><ol><li><h4 id="我的思路："><a href="#我的思路：" class="headerlink" title="我的思路："></a>我的思路：</h4></li></ol><p>（这个脑子确实不适合做算法）找出了0-31对应二进制各位变化的规律<br>比如：最低位每一次变化一次，第二位每两次变化一次，第三位每 2<sup>2</sup> 变化一次，以此类推。<br>然后，定义了一个整形数组，存储对应位的标志次数，根据标志次数对对应位0/1串进行变化。<br>（我真是角度刁钻到不行）<br>以下是关键代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>[] sub = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">5</span>];   <span class="comment">//存储当前准备输出的01子串</span></span><br><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];   <span class="comment">//标志数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)&#123;</span><br><span class="line">    sub[i] = <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">printCharArr(sub);  <span class="comment">//自定义的输出01子串的方法</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; ++i)&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; ++j)&#123;</span><br><span class="line">        a[j]++;</span><br><span class="line">        <span class="comment">//当对应位j的标志值，等于2^j的倍数时，则需要对对应位进行改变，0变成1，1变成0</span></span><br><span class="line">        <span class="keyword">if</span>(a[j] % Math.pow(<span class="number">2</span>, j) == <span class="number">0</span>)&#123; </span><br><span class="line">            <span class="keyword">if</span>(sub[<span class="number">4</span>-j] == <span class="string">'0'</span>)&#123;</span><br><span class="line">                sub[<span class="number">4</span>-j] = <span class="string">'1'</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sub[<span class="number">4</span>-j] = <span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printCharArr(sub);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="最佳解法："><a href="#最佳解法：" class="headerlink" title="最佳解法："></a>最佳解法：</h4><p> 输出0-32对应的二进制串就行了啊！！！我在想什么！！！<br>可以使用短除法，将结果使用数组存储  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> n = i, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">        a[j++] = n % <span class="number">2</span>;</span><br><span class="line">        n /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">4</span>; k &gt;= <span class="number">0</span>; k--) &#123;</span><br><span class="line">        System.out.print(a[k]);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 也可以直接使用Java内置进制转换函数，但是因为要求输出五位，所以要对输出结果进行格式化,在前面补0；  </p><p> 字符串格式化：</p><pre><code>1）控制输出宽度    `String.format(&quot;%5s&quot;, str)`    5可以换成任意数字， 表示定义输出宽度2）多余补0    使用&quot;%ns&quot;、&quot;%nd&quot;等，小于自定义长度的默认是补空格；    要自动补0可以写成：&quot;%0nd&quot;，但这个用法对&quot;%s&quot;不适用    所以要先将二进制字符串转换成整型</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; ++i)&#123;</span><br><span class="line">    String binaryStr = Integer.toBinaryString(i);</span><br><span class="line">    <span class="keyword">int</span> temp = Integer.valueOf(binaryStr);</span><br><span class="line">    System.out.println(String.format(<span class="string">"%05d"</span>, temp));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="暴力解法："><a href="#暴力解法：" class="headerlink" title="暴力解法："></a>暴力解法：</h4><p>直接五个嵌套for循环输出</p></li></ol><h3 id="找规律输出指定行列数的字母表"><a href="#找规律输出指定行列数的字母表" class="headerlink" title="找规律输出指定行列数的字母表"></a>找规律输出指定行列数的字母表</h3><pre><code>//    ABCDEFG//    BABCDEF//    CBABCDE//    DCBABCD//    EDCBABC//    FEDCBAB//    GFEDCBA//    HGFEDCB</code></pre><p>比较简单，只需要对第一行进行初始化，以后的每一行的第一列相对于上一行的第一列ASCII码加一，第1+列等于上一行的上一列；<br>需要注意的处理就是，<strong>整型和字符型的转换</strong>，根据是ASCII码表，可直接强转<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] gragh = <span class="keyword">new</span> <span class="keyword">int</span>[n][m];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">    gragh[<span class="number">0</span>][i] = <span class="number">65</span>+i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)&#123;</span><br><span class="line">    gragh[i][<span class="number">0</span>] = gragh[i-<span class="number">1</span>][<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m; ++j)&#123;</span><br><span class="line">        gragh[i][j] = gragh[i-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j)&#123;</span><br><span class="line">        System.out.print((<span class="keyword">char</span>)gragh[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="十进制转十六进制"><a href="#十进制转十六进制" class="headerlink" title="十进制转十六进制"></a>十进制转十六进制</h3><ol><li><h4 id="短除法"><a href="#短除法" class="headerlink" title="短除法"></a>短除法</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span>[] resultHEX = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n != <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">int</span> temp = n % <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">char</span> tempC;</span><br><span class="line">    <span class="keyword">if</span>(temp &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">        tempC = (<span class="keyword">char</span>)(<span class="string">'A'</span>+(temp-<span class="number">10</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        tempC = Integer.toString(temp).charAt(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    n /= <span class="number">16</span>;</span><br><span class="line">    </span><br><span class="line">    resultHEX[len++] = tempC;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = len-<span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)&#123;</span><br><span class="line">    System.out.print(resultHEX[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="Java内置进制转换函数"><a href="#Java内置进制转换函数" class="headerlink" title="Java内置进制转换函数"></a>Java内置进制转换函数</h4></li></ol><p><em>P.S:考虑对应转换成十进制后是否会超出int范围，换用对应的Long.parseLong等</em></p><blockquote><p>   //其他进制转换为十进制  </p><blockquote><p>   //第一种方法<br>    Integer.parseInt(“0100101”,2);//二进制转换为十进制<br>    Integer.parseInt(“23”,8);//八进制转换为十进制<br>    Integer.parseInt(“A2”,16);//十六进制转换为十进制<br>   //第二种方法<br>    Integer.valueOf(“0100101”,2).tostring();//二进制转换为十进制<br>    Integer.valueOf(“23”,8).tostring();//八进制转换为十进制<br>    Integer.valueOf(“A2”,16).tostring();//十六进制转换为十进制</p></blockquote></blockquote><blockquote><p>   //十进制转换为其他进制  </p><blockquote><p>   Integer.toHexString(int i);//十进制转换为十六进制<br>    Integer.toOctalString(int i);//十进制转换为八进制<br>    Integer.toBinaryString(int i);//十进制转换为二进制</p></blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Integer.toHexString(n).toUpperCase());<span class="comment">//Integer.toHexString(n)以小写输出，字符串，转换成大写</span></span><br></pre></td></tr></table></figure><h3 id="十六进制转十进制"><a href="#十六进制转十进制" class="headerlink" title="十六进制转十进制"></a>十六进制转十进制</h3><ol><li><h4 id="短除法-1"><a href="#短除法-1" class="headerlink" title="短除法"></a>短除法</h4><p>P.S：此方法定义Long型存储结果，因为当十六进制为FFFF FFFF会超出int范围</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">long</span> num = <span class="number">0</span>;<span class="comment">//FFFFFFFF会超过int的数值范围</span></span><br><span class="line"><span class="keyword">int</span> len = HexNum.length();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; ++i)&#123;</span><br><span class="line">    <span class="keyword">char</span> n = HexNum.charAt(i);</span><br><span class="line">    <span class="keyword">if</span>(n &lt;= <span class="string">'9'</span> &amp;&amp; n &gt;= <span class="string">'0'</span>)&#123;</span><br><span class="line">        <span class="comment">/* </span></span><br><span class="line"><span class="comment">         * 需要"-'0'"-&gt;</span></span><br><span class="line"><span class="comment">         * 不能直接将字符强制转换成int进行计算;</span></span><br><span class="line"><span class="comment">         * 也不能使用Integer.valueOf,因为转换结果是对应的ASCII码，而不是对应十进制数值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        num += ((<span class="keyword">int</span>)n - <span class="string">'0'</span>) * Math.pow(<span class="number">16</span>, len-i-<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        num += ((<span class="keyword">int</span>)(n -<span class="string">'A'</span>) + <span class="number">10</span>) * Math.pow(<span class="number">16</span>, len-i-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(num);</span><br></pre></td></tr></table></figure></li><li><h4 id="使用java内置函数"><a href="#使用java内置函数" class="headerlink" title="使用java内置函数"></a>使用java内置函数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> num = Long.parseLong(HexNum, <span class="number">16</span>);</span><br><span class="line">System.out.println(num);</span><br></pre></td></tr></table></figure></li></ol><h3 id="十六进制转八进制"><a href="#十六进制转八进制" class="headerlink" title="十六进制转八进制"></a>十六进制转八进制</h3><p><em>P.S：此题因为题目给出要求“每个十六进制数长度不超过100000”，数据太大，所以先将十六进制使用Java内置函数转换成二进制再将二进制转换成对应八进制的方法不可行</em></p><p><strong>使用StringBuffer存储</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Basic12_Sixteen2Eight</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//TODO 自动生成的方法存根</span></span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">scanner.nextLine();</span><br><span class="line"></span><br><span class="line">String[] oct = <span class="keyword">new</span> String[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">oct[i] = scanner.nextLine();</span><br><span class="line">&#125;</span><br><span class="line">scanner.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">System.out.println(toOct(toBinary(oct[i])));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toBinary</span><span class="params">(String strHex)</span></span>&#123;<span class="comment">//将十六进制转换成二进制</span></span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strHex.length(); ++i)&#123;</span><br><span class="line"><span class="keyword">char</span> hexNow = strHex.charAt(i);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 为什么会运行超时？？？？</span></span><br><span class="line"><span class="comment">if(hexNow &lt;= '9' &amp;&amp; hexNow &gt;= '0')&#123;</span></span><br><span class="line"><span class="comment">//Integer.toBinaryString()转换成二进制字符串</span></span><br><span class="line"><span class="comment">//String.format("%0d", int); 格式化宽度，并在前面补零</span></span><br><span class="line"><span class="comment">//%0d,对%0s不适用，所以将二进制字符串转换成数字</span></span><br><span class="line"><span class="comment">sb.append(String.format("%04d", Integer.parseInt(Integer.toBinaryString(hexNow-'0'))));</span></span><br><span class="line"><span class="comment">&#125;else&#123;</span></span><br><span class="line"><span class="comment">sb.append(String.format("%04d", Integer.parseInt(Integer.toBinaryString(hexNow-'A'+10))));</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(hexNow)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'1'</span>: sb.append(<span class="string">"0001"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'2'</span>: sb.append(<span class="string">"0010"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'3'</span>: sb.append(<span class="string">"0011"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'4'</span>: sb.append(<span class="string">"0100"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'5'</span>: sb.append(<span class="string">"0101"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'6'</span>: sb.append(<span class="string">"0110"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'7'</span>: sb.append(<span class="string">"0111"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'8'</span>: sb.append(<span class="string">"1000"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'9'</span>: sb.append(<span class="string">"1001"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'A'</span>: sb.append(<span class="string">"1010"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'B'</span>: sb.append(<span class="string">"1011"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'C'</span>: sb.append(<span class="string">"1100"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'D'</span>: sb.append(<span class="string">"1101"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'E'</span>: sb.append(<span class="string">"1110"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'F'</span>: sb.append(<span class="string">"1111"</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'0'</span>: sb.append(<span class="string">"0000"</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toOct</span><span class="params">(String strBin)</span></span>&#123;</span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strBin.length()%<span class="number">3</span> == <span class="number">1</span>)&#123;</span><br><span class="line">strBin = <span class="string">"00"</span> + strBin;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strBin.length()%<span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">strBin = <span class="string">"0"</span> + strBin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> k = strBin.substring(<span class="number">0</span>, <span class="number">3</span>).equals(<span class="string">"000"</span>)? <span class="number">3</span>: <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = k; i &lt; strBin.length()-<span class="number">2</span>; i += <span class="number">3</span>)&#123;</span><br><span class="line">String strNow = strBin.substring(i, i+<span class="number">3</span>);</span><br><span class="line"><span class="keyword">switch</span>(strNow)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"000"</span>:</span><br><span class="line">sb.append(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"001"</span>:</span><br><span class="line">sb.append(<span class="string">"1"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"010"</span>:</span><br><span class="line">sb.append(<span class="string">"2"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"011"</span>:</span><br><span class="line">sb.append(<span class="string">"3"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"100"</span>:</span><br><span class="line">sb.append(<span class="string">"4"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"101"</span>:</span><br><span class="line">sb.append(<span class="string">"5"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"110"</span>:</span><br><span class="line">sb.append(<span class="string">"6"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"111"</span>:</span><br><span class="line">sb.append(<span class="string">"7"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      张馨艺终于有了她的第一篇学习博客，向生活低头
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://Chacha-Z.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>那一天我二十一岁</title>
    <link href="http://Chacha-Z.github.io/2018/10/16/%E9%82%A3%E4%B8%80%E5%A4%A9%E6%88%91%E4%BA%8C%E5%8D%81%E4%B8%80%E5%B2%81/"/>
    <id>http://Chacha-Z.github.io/2018/10/16/那一天我二十一岁/</id>
    <published>2018-10-16T00:05:23.000Z</published>
    <updated>2019-03-11T07:05:56.000Z</updated>
    
    <content type="html"><![CDATA[<p style="font-size: 0.95em"><br>要怎么评价我的二十岁呢<br>也不是非要有个评价<br>做个了结吧<br>希望自己有一个全新的二十一岁<br><br><br>二十岁这一年是佛系的一年<br>说来佛系也不是完全没有期待<br>只不过把那些期待全部压在了心底<br>圆满不了的在心里翻江倒海，嘴上不过一句算了吧<br>遗憾是一个蛮令人难过的词<br>希望二十一岁自己能更勇敢一点，更随性一点，做让自己开心的事情<br><br><br>还是要更努力呀<br>和过去告别就要静下心来了<br>怎么说得像我的二十岁很难过的样子<br>其实文字完全取决于当下的心情啦<br>我过去一年总得来说还是蛮开心的<br>还是比较对得起自己的努力<br>还是遇见了很多很可爱的人<br>还是每天开开心心的像个沙雕<br>希望二十一岁自己能更努力一点，更爱我的家人朋友，做一个温暖纯良的人<br><br><br>还是有最后<br>送给那个我二十岁遇到的光<br>那些没开过的口，那些背影里的目光，都算了吧<br>也祝你以后的人生天高海阔，有缘再见<br><br></p><div style="width: 400px;"><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=3563219&auto=1&height=66"></iframe><br></div>]]></content>
    
    <summary type="html">
    
      要怎么评价自己的二十岁呢
    
    </summary>
    
    
      <category term="ALLME" scheme="http://Chacha-Z.github.io/categories/ALLME/"/>
    
    
      <category term="lifeBB" scheme="http://Chacha-Z.github.io/tags/lifeBB/"/>
    
  </entry>
  
  <entry>
    <title>那就先给您劈个叉吧</title>
    <link href="http://Chacha-Z.github.io/2018/10/15/%E9%82%A3%E5%B0%B1%E5%85%88%E7%BB%99%E6%82%A8%E5%8A%88%E4%B8%AA%E5%8F%89%E5%90%A7/"/>
    <id>http://Chacha-Z.github.io/2018/10/15/那就先给您劈个叉吧/</id>
    <published>2018-10-15T11:00:15.000Z</published>
    <updated>2019-03-11T07:05:44.000Z</updated>
    
    <content type="html"><![CDATA[<center><br>    <font size="2" color="#999">既然不知道说什么，那就给您劈个叉吧<br><br>哈！</font><br></center><p><img src="/2018/10/15/那就先给您劈个叉吧/picha.png" alt="看性感张馨艺在线劈叉!"></p><a id="more"></a><h3 id="序-INTRO"><a href="#序-INTRO" class="headerlink" title="序 | INTRO"></a>序 | INTRO</h3><p style="line-height:2em; font-size: 0.95em"><br>好啦，其实我不会劈叉，我也有很多想说的<br>老早就开始搭建这个博客，一直处于不满意搁置更不满意更搁置的恶性循环中<br>这两天总算逼了自己一把，想赶在自己21岁生日之前搭完，也算作自己给自己的生日礼物啦！<br>明天我就21岁啦！<br>“我想爱、想吃、还想在一瞬间变成天上半明半暗的云”<br>人生或许真的是一个缓慢受锤的过程，但我还是希望自己能永远生猛下去<br>嘻嘻于二零一八年十月十五日<br></p><h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><p style="line-height:2em; font-size: 0.95em"><br>21岁的我啊<br>最近有点过分可爱了，其实已经是一个大三过气老学姐了<br>喜欢前端，喜欢美丽的东西，期待能成为一个创造美好的人<br>喜欢唱歌，总感觉自己唱歌越来越难听了，但也可能是自我认识越来越清楚了<br>喜欢听歌，喜欢吉他，喜欢瞎哼哼和瞎蹦跶<br>立志做整个院坝最咸的那只鱼，蹦哒的最欢但目标不在翻身，开心就好啦<br></p><h3 id="关于这个博客"><a href="#关于这个博客" class="headerlink" title="关于这个博客"></a>关于这个博客</h3><p style="line-height:2em; font-size: 0.95em"><br>见博如晤<br>压根就不是一个喜欢写技术博客的人<br>所以如果朋友你恰好进来看到了就随意逛逛<br>还望包容我的骚气矫情<br>或许我哪天开窍了还是会有技术博客的呢<br>相见是缘朋友，希望有朝一日你能成为大佬，希望已经是大佬的你越来越大佬，祝您的人生天高海阔！<br></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p><br></p><blockquote><p>It is one to me that they come or go<br>If I have myself and the drive of my will,<br>And strength to climb on a summer night<br>And watch the stars swarm over the hill.</p></blockquote><div style="width: 350px"><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&id=1598127&auto=1&height=66"></iframe><br></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;    &lt;font size=&quot;2&quot; color=&quot;#999&quot;&gt;既然不知道说什么，那就给您劈个叉吧&lt;br&gt;&lt;br&gt;哈！&lt;/font&gt;&lt;br&gt;&lt;/center&gt;


&lt;p&gt;&lt;img src=&quot;/2018/10/15/那就先给您劈个叉吧/picha.png&quot; alt=&quot;看性感张馨艺在线劈叉!&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ALLME" scheme="http://Chacha-Z.github.io/categories/ALLME/"/>
    
    
      <category term="lifeBB" scheme="http://Chacha-Z.github.io/tags/lifeBB/"/>
    
  </entry>
  
</feed>
